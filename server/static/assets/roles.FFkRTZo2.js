import{c as Y,u as S,F as d,r,j as e,E as C,af as H,O as Q,aK as Z,a2 as b,n as u,aN as X,V as ee,aO as le,C as te,Y as ae,Z as v,a1 as oe,aP as se,M as re,m as T,aQ as R,aR as ie,aS as ne,aT as ce,an as k,_ as de,s as p}from"./vendor.Bo5zsZF4.js";import{f as E,T as ue}from"./components.BU5zOqAN.js";import{B as me,C as pe,D as fe,E as he,F as xe}from"./base.BwF3eh7m.js";import"./vite.BF1G3H_w.js";import"./contexts.B1xQmLr_.js";const{TextArea:I}=T,ye=Y(({css:i})=>({rolePolicy:i`
       .ant-collapse-content>.ant-collapse-content-box{
        padding: 2px;
      }
      .ant-form-item-additional>#policy_document_extra{
        min-height: 0;
      }
      .ant-tree .ant-tree-node-content-wrapper{
        flex: none;
      }
    `,rolePermissionExtra:i`
      float: right;
      z-index: 1001;
      position: sticky;
    `,rolePolicyExtra:i`
      position: absolute;
      right: 5px;
      top: 5px;
    `})),Ae=()=>{const{styles:i}=ye(),{t}=S("authorization"),{t:n}=S("common"),[c]=d.useForm(),[D,A]=r.useState(!1),[F,f]=r.useState(!1),[y,g]=r.useState(null),[m,h]=r.useState([]),x=r.useRef(null),[_,N]=r.useState([]),[z,j]=r.useState([]),[O,w]=r.useState(!0),$=l=>{j(l),w(!1)},q=()=>{const l=_.map(a=>a.key);j(l),w(!0)},J=()=>{j([]),w(!1)},M=()=>{g(null),h([]),c.resetFields(),f(!0)},W=l=>{var a,o;g(l),h(((a=l.permissions)==null?void 0:a.map(s=>s.id))||[]),c.setFieldsValue({name:l.name,description:l.description,permissions:((o=l.permissions)==null?void 0:o.map(s=>s.id))||[],policy_document:JSON.stringify(l.policy_document,null,2)}),f(!0)},B=async l=>{var a,o;try{await pe(l),p.success(t("role.deleteSuccess",{defaultValue:"Role deleted successfully."})),(o=(a=x.current)==null?void 0:a.reload)==null||o.call(a)}catch(s){p.error(t("role.deleteError",{defaultValue:"Failed to delete role: {{error}}",error:s}))}},L=(l,a)=>{if(!a)return m.length===0?Promise.reject(new Error(t("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve();try{return JSON.parse(a),Promise.resolve()}catch{return Promise.reject(new Error(t("role.invalidJsonFormat",{defaultValue:"Invalid JSON format."})))}},K=async l=>{var a,o;try{l.policy_document=JSON.parse(l.policy_document??{}),A(!0),y?(await he(y.id,{...l,permissions:m.filter(s=>!s.startsWith("[group]-"))}),p.success(t("role.updateSuccess",{defaultValue:"Role updated successfully."}))):(await xe({...l,permissions:m.filter(s=>!s.startsWith("[group]-"))}),p.success(t("role.createSuccess",{defaultValue:"Role created successfully."}))),f(!1),(o=(a=x.current)==null?void 0:a.reload)==null||o.call(a)}catch(s){console.error(t("role.saveError",{defaultValue:"Failed to save role."}),s),p.error(t("role.saveError",{defaultValue:"Failed to save role."}))}finally{A(!1)}},G=[{title:t("role.name",{defaultValue:"Role Name"}),dataIndex:"name",key:"name",render:l=>e.jsxs(C,{children:[e.jsx(H,{}),l]})},{title:t("role.description",{defaultValue:"Description"}),dataIndex:"description",key:"description"},{title:t("role.permissionCount",{defaultValue:"Permissions"}),key:"permission_count",render:(l,a)=>{var o;return e.jsxs(Q,{color:"blue",children:[e.jsx(Z,{})," ",((o=a.permissions)==null?void 0:o.length)||0]})}},{title:t("role.createdAt",{defaultValue:"Created At"}),dataIndex:"created_at",key:"created_at",render:l=>new Date(l).toLocaleString()},{title:n("actions",{defaultValue:"Actions"}),key:"action",render:(l,a)=>e.jsxs(C,{size:"small",children:[e.jsx(E,{permission:"authorization:role:update",children:e.jsx(b,{title:t("role.edit",{defaultValue:"Edit Role"}),children:e.jsx(u,{type:"text",size:"small",icon:e.jsx(X,{}),onClick:()=>W(a)})})}),e.jsx(E,{permission:"authorization:role:delete",children:e.jsx(b,{title:t("role.delete",{defaultValue:"Delete Role"}),children:e.jsx(ee,{title:t("role.deleteConfirm",{defaultValue:"Are you sure you want to delete this role?"}),onConfirm:()=>B(a.id),okText:n("confirm",{defaultValue:"Confirm"}),cancelText:n("cancel",{defaultValue:"Cancel"}),children:e.jsx(u,{type:"text",size:"small",danger:!0,icon:e.jsx(le,{})})})})})]})}],U={allow_all:{policy:{Statement:[{Effect:"Allow",Action:["*"]}]}},deny_all:{Statement:[{Effect:"Deny",Action:["*"]}]},allow_with_action:{Statement:[{Effect:"Allow",Action:["authorization:user:view"]}]},allow_with_condition:{Statement:[{Effect:"Allow",Action:["authorization:user:update"],Condition:{StringEquals:{"id:":"abcdef"}}},{Effect:"Deny",Action:["*"]}]},allow_with_uri:{Statement:[{Effect:"Allow",Action:["authorization:user:view"],Condition:{StringEquals:{"http.uri":"/api/users/abcdef","http.method":"GET"}}},{Effect:"Deny",Action:["*"]}]}},P=async()=>{fe().then(l=>{N(l.map((a,o)=>{var s;return{key:`[group]-${o}`,title:a.name,code:a.name.replace(/ /g,"_"),children:(s=a.permissions)==null?void 0:s.map(V=>({key:V.id,code:V.code.replace(/:/g,"."),title:V.name}))}}))})};return r.useEffect(()=>{P()},[]),e.jsxs("div",{children:[e.jsxs(te,{style:{marginBottom:16},children:[e.jsx("div",{style:{marginBottom:16},children:e.jsxs(ae,{justify:"space-between",align:"middle",children:[e.jsx(v,{children:e.jsx(u,{type:"primary",onClick:()=>{var l,a;(a=(l=x.current)==null?void 0:l.reload)==null||a.call(l),P()},icon:e.jsx(oe,{}),children:n("refresh",{defaultValue:"Refresh"})})}),e.jsx(v,{children:e.jsx(E,{permission:"authorization:role:create",children:e.jsx(u,{type:"primary",icon:e.jsx(se,{}),onClick:M,children:t("role.create",{defaultValue:"Create Role"})})})})]})}),e.jsx(ue,{request:async({page_size:l,current:a})=>me(a,l),columns:G,actionRef:x})]}),e.jsx(re,{title:y?t("role.editTitle",{defaultValue:"Edit Role"}):t("role.createTitle",{defaultValue:"Create Role"}),open:F,onOk:c.submit,onCancel:()=>f(!1),confirmLoading:D,children:e.jsxs(d,{form:c,layout:"vertical",onFinish:K,children:[e.jsx(d.Item,{label:t("role.name",{defaultValue:"Role Name"}),name:"name",rules:[{required:!0,message:t("role.nameRequired",{defaultValue:"Please enter the role name."})}],children:e.jsx(T,{placeholder:t("role.namePlaceholder",{defaultValue:"Enter role name"})})}),e.jsx(d.Item,{label:t("role.description",{defaultValue:"Description"}),name:"description",children:e.jsx(I,{rows:4,placeholder:t("role.descriptionPlaceholder",{defaultValue:"Enter role description"})})}),e.jsxs(R,{accordion:!0,bordered:!1,className:i.rolePolicy,children:[e.jsx(R.Panel,{forceRender:!0,header:t("role.permissions",{defaultValue:"Permissions"}),style:{padding:0},children:e.jsx(d.Item,{name:"permissions",rules:[{validator(){return m.length===0&&!c.getFieldValue("policy_document")?Promise.reject(new Error(t("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve()}}],children:e.jsx("div",{children:e.jsxs("div",{style:{maxHeight:"400px",overflowY:"auto",border:"1px solid #d9d9d9",borderRadius:"4px"},children:[e.jsxs("span",{className:i.rolePermissionExtra,children:[e.jsx(u,{type:"link",onClick:q,icon:e.jsx(ie,{}),children:n("expandAll",{defaultValue:"Expand All"})}),e.jsx(u,{type:"link",onClick:J,icon:e.jsx(ne,{}),children:n("collapseAll",{defaultValue:"Collapse All"})})]}),e.jsx(ce,{treeData:_,titleRender:l=>e.jsx("span",{children:t(`permission.title.${l.code}`,{defaultValue:l.title})}),checkable:!0,expandedKeys:z,autoExpandParent:O,onExpand:$,checkedKeys:m,onCheck:l=>{k.isArray(l)?h(l):k.has(l,"checked")&&h(l.checked)}})]})})})},"permissions"),e.jsx(R.Panel,{forceRender:!0,header:t("role.policyDocument",{defaultValue:"Policy Document (JSON)"}),children:e.jsx(d.Item,{name:"policy_document",rules:[{validator:L}],extra:e.jsx("span",{className:i.rolePolicyExtra,children:e.jsx(de,{style:{width:120},placeholder:t("role.insertTemplate",{defaultValue:"Insert Template"}),value:t("role.insertTemplate",{defaultValue:"Insert Template"}),options:[{label:t("role.allowAll",{defaultValue:"Allow All"}),value:"allow_all"},{label:t("role.denyAll",{defaultValue:"Deny All"}),value:"deny_all"},{label:t("role.allowWithAction",{defaultValue:"Allow with Action"}),value:"allow_with_action"},{label:t("role.denyWithCondition",{defaultValue:"Allow with Condition"}),value:"allow_with_condition"},{label:t("role.allowWithUri",{defaultValue:"Allow with URI"}),value:"allow_with_uri"}],onChange:l=>{const a=U[l];a&&c.setFieldValue("policy_document",JSON.stringify(a,null,2))}})}),children:e.jsx(I,{rows:15,style:{fontFamily:"monospace"},placeholder:`{
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "account:EnableRegion",
                "account:DisableRegion"
            ],
            "Condition": {
                "StringEquals": {"id:": "abcdef"}
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "*"
            ]
        }
    ]
}`})})},"policy_document")]})]})})]})};export{Ae as default};

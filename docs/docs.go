// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/authorization/auth/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "User login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/auth/logout": {
            "post": {
                "description": "User logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "User logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/ldap/users": {
            "get": {
                "description": "Get LDAP users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get LDAP users",
                "operationId": "getLdapUsers",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Skip existing users",
                        "name": "skip_existing",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/disable": {
            "post": {
                "description": "Disable MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Disable MFA",
                "operationId": "disableMfa",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/enable": {
            "post": {
                "description": "Enable MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Enable MFA",
                "operationId": "enableMfa",
                "parameters": [
                    {
                        "description": "MFA Type",
                        "name": "mfa_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_EnableMFAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/verify": {
            "post": {
                "description": "Verify and activate MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Verify and activate MFA",
                "operationId": "verifyAndActivateMfa",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "MFA Type",
                        "name": "mfa_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/oauth/callback": {
            "get": {
                "description": "Handle the OAuth callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/OAuth"
                ],
                "summary": "Handle the OAuth callback",
                "operationId": "handleCallback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State",
                        "name": "state",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/oauth/login/{provider}": {
            "get": {
                "description": "Get the OAuth login URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/OAuth"
                ],
                "summary": "Get the OAuth login URL",
                "operationId": "getLoginUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_OAuthLoginURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/oauth/providers": {
            "get": {
                "description": "Get the list of available OAuth providers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/OAuth"
                ],
                "summary": "Get the list of available OAuth providers",
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_authorizationapi_OAuthProvider"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/permissions": {
            "get": {
                "description": "Get a list of permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Permission"
                ],
                "summary": "Get a list of permissions",
                "operationId": "listPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_PermissionGroup"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile": {
            "get": {
                "description": "Get current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get current user's information",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update current user's information",
                "operationId": "updateCurrentUser",
                "parameters": [
                    {
                        "description": "Update current user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateCurrentUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/logs": {
            "get": {
                "description": "Get current user's audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get current user's audit logs",
                "operationId": "getCurrentUserLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/password": {
            "put": {
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile"
                ],
                "summary": "Change user password",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions": {
            "get": {
                "description": "Get all sessions for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Get all sessions for the user",
                "operationId": "getUserSessions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Session"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions/terminate-others": {
            "post": {
                "description": "Terminate all sessions except the current one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Terminate all sessions except the current one",
                "operationId": "terminateOtherSessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions/{id}": {
            "delete": {
                "description": "Terminate the specified session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Terminate the specified session",
                "operationId": "terminateSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/refresh": {
            "post": {
                "description": "Refresh user's JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Refresh user's JWT token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-authorizationapi_TokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles": {
            "get": {
                "description": "Get a list of roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get a list of roles",
                "operationId": "listRoles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Create a new role",
                "operationId": "createRole",
                "parameters": [
                    {
                        "description": "Create role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}": {
            "get": {
                "description": "Get a role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get a role by ID",
                "operationId": "getRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Update a role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Delete a role",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}/permissions": {
            "put": {
                "description": "Assign permissions to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Assign permissions to a role",
                "operationId": "assignPermissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign permissions request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}/policy": {
            "get": {
                "description": "Get the policy document for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get the policy document for a role",
                "operationId": "getRolePolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_PolicyDocument"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Set the policy for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Set the policy for a role",
                "operationId": "setRolePolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set role policy request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PolicyDocument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts": {
            "get": {
                "description": "Get service account list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account list",
                "operationId": "getServiceAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Create service account",
                "operationId": "createServiceAccount",
                "parameters": [
                    {
                        "description": "Create service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateServiceAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}": {
            "get": {
                "description": "Get service account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account by ID",
                "operationId": "getServiceAccountById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account",
                "operationId": "updateServiceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Delete service account",
                "operationId": "deleteServiceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/access-keys": {
            "get": {
                "description": "Get service account access keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account access keys",
                "operationId": "getServiceAccountAccessKeys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_ServiceAccountAccessKey"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Create service account access key",
                "operationId": "createServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create service account access key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateServiceAccountAccessKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccountAccessKey"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/access-keys/{keyId}": {
            "put": {
                "description": "Update service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account access key",
                "operationId": "updateServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access key ID",
                        "name": "keyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account access key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountAccessKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccountAccessKey"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Delete service account access key",
                "operationId": "deleteServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access key ID",
                        "name": "keyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/policy": {
            "get": {
                "description": "Get service account policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account policy",
                "operationId": "getServiceAccountPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_PolicyDocument"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Set service account policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Set service account policy",
                "operationId": "setServiceAccountPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set service account policy request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.SetServiceAccountPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/roles": {
            "get": {
                "description": "Get service account roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account roles",
                "operationId": "getServiceAccountRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Assign roles to service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Assign roles to service account",
                "operationId": "assignServiceAccountRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign roles to service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignServiceAccountRolesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/status": {
            "put": {
                "description": "Update service account status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account status",
                "operationId": "updateServiceAccountStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users": {
            "get": {
                "description": "Get a list of users with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user list",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Keywords for searching",
                        "name": "keywords",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status of the user",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Create a new user",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}": {
            "get": {
                "description": "Get a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user by ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/logs": {
            "get": {
                "description": "Get user's audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user's audit logs",
                "operationId": "getUserLogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/password": {
            "put": {
                "description": "Reset a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Reset a user's password",
                "operationId": "resetUserPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reset user password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.ResetUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/restore": {
            "post": {
                "description": "Restore a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Restore a user",
                "operationId": "restoreUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/roles": {
            "post": {
                "description": "Assign roles to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Assign roles to a user",
                "operationId": "assignRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign roles to user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignRolesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/status": {
            "put": {
                "description": "Update a user's status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update a user's status",
                "operationId": "updateUserStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateUserStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/unlock": {
            "post": {
                "description": "Unlock a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Unlock a user",
                "operationId": "unlockUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/base-settings": {
            "get": {
                "description": "Get all system settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Base"
                ],
                "summary": "Get all system settings",
                "operationId": "getSystemBaseSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SystemSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Batch update system settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Base"
                ],
                "summary": "Batch update system settings",
                "operationId": "updateSystemBaseSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files": {
            "get": {
                "description": "Get file list",
                "tags": [
                    "File Management"
                ],
                "summary": "Get file list",
                "operationId": "listFiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "File type",
                        "name": "file_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload file",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "File Management"
                ],
                "summary": "Upload file",
                "operationId": "uploadFile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access type",
                        "name": "access",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "File type",
                        "name": "type",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files/{fileKey}": {
            "get": {
                "description": "Download file",
                "tags": [
                    "File Management"
                ],
                "summary": "Download file",
                "operationId": "downloadFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File key",
                        "name": "fileKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ldap-settings/test": {
            "post": {
                "description": "Test LDAP connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Test LDAP connection",
                "operationId": "testLdapConnection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_LDAPTestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/statistics": {
            "get": {
                "description": "Get statistics",
                "tags": [
                    "Statistics"
                ],
                "summary": "Get statistics",
                "operationId": "getStatistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_Charts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/audit-logs": {
            "get": {
                "description": "Get all audit logs, supports multiple filtering conditions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Audit Log"
                ],
                "summary": "Get audit logs",
                "operationId": "getAuditLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/health": {
            "get": {
                "description": "Check the health of the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Health"
                ],
                "summary": "Health check",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_HealthResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/info": {
            "get": {
                "description": "Get system information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Info"
                ],
                "summary": "Get system information",
                "operationId": "getSystemInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_SystemInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/ldap-settings": {
            "get": {
                "description": "Get LDAP settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Get LDAP settings",
                "operationId": "getLdapSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_LDAPSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update LDAP settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Update LDAP settings",
                "operationId": "updateLdapSettings",
                "parameters": [
                    {
                        "description": "Update LDAP settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.UpdateLDAPSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/ldap-settings/import": {
            "post": {
                "description": "Import LDAP users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Import LDAP users",
                "operationId": "importLdapUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings": {
            "get": {
                "description": "Get OAuth settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Get OAuth settings",
                "operationId": "getOauthSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_OAuthSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update OAuth settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Update OAuth settings",
                "operationId": "updateOauthSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_OAuthSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings/test": {
            "post": {
                "description": "Test OAuth connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Test OAuth connection",
                "operationId": "testOauthConnection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_OAuthLoginURLResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings/test-callback": {
            "post": {
                "description": "Test OAuth callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Test OAuth callback",
                "operationId": "testOauthCallback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_TestOAuthCallbackResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/security-settings": {
            "get": {
                "description": "Get security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Get security settings",
                "operationId": "getSecuritySettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SecuritySettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Update security settings",
                "operationId": "updateSecuritySettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SecuritySettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/security-settings/check-password": {
            "post": {
                "description": "Check password complexity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Check password complexity",
                "operationId": "checkPasswordComplexity",
                "parameters": [
                    {
                        "description": "Check password complexity request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.CheckPasswordComplexityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_CheckPasswordComplexityResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/smtp-settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the current SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Get SMTP settings",
                "operationId": "getSmtpSettings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved SMTP settings",
                        "schema": {
                            "$ref": "#/definitions/model.SMTPSettings"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Update SMTP settings",
                "operationId": "updateSmtpSettings",
                "parameters": [
                    {
                        "description": "SMTP settings to update",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SMTPSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SMTPSettings"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/smtp-settings/test": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sends a test email to the specified recipient using the provided or saved SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Test SMTP connection",
                "operationId": "testSmtpConnection",
                "parameters": [
                    {
                        "description": "SMTP test request, including recipient and optional SMTP settings to test with",
                        "name": "testRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SMTPTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_SMTPTestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during test",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authorizationapi.AssignPermissionsRequest": {
            "type": "object",
            "required": [
                "permission_ids"
            ],
            "properties": {
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.AssignRolesRequest": {
            "type": "object",
            "required": [
                "role_ids"
            ],
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.AssignServiceAccountRolesRequest": {
            "type": "object",
            "required": [
                "role_ids"
            ],
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.CreateRoleRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.CreateServiceAccountAccessKeyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires_in_days": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.CreateServiceAccountRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.LoginRequest": {
            "type": "object",
            "properties": {
                "mfa_code": {
                    "type": "string"
                },
                "mfa_token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.OAuthProvider": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.ResetUserPasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.SetServiceAccountPolicyRequest": {
            "type": "object",
            "required": [
                "policy_document"
            ],
            "properties": {
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateCurrentUserRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateRoleRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.UpdateServiceAccountAccessKeyRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "disabled"
                    ]
                }
            }
        },
        "authorizationapi.UpdateServiceAccountRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateServiceAccountStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "disabled"
                    ]
                }
            }
        },
        "authorizationapi.UpdateUserStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "model.AccessType": {
            "type": "string",
            "enum": [
                "public",
                "private",
                "owner"
            ],
            "x-enum-varnames": [
                "AccessTypePublic",
                "AccessTypePrivate",
                "AccessTypeOwner"
            ]
        },
        "model.AuditLog": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Operation type",
                    "type": "string"
                },
                "action_name": {
                    "description": "Operation name",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "details": {
                    "description": "Operation details, in JSON format",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AuditLogDetail"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "description": "IP address of the operation",
                    "type": "string"
                },
                "ref_id": {
                    "description": "Associated resource ID",
                    "type": "string"
                },
                "status": {
                    "description": "Operation status: success, failed",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp of the operation",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_agent": {
                    "description": "User agent information",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID of the operator",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the operator",
                    "type": "string"
                }
            }
        },
        "model.AuditLogDetail": {
            "type": "object",
            "properties": {
                "new_data": {},
                "old_data": {},
                "request": {}
            }
        },
        "model.Condition": {
            "type": "object",
            "additionalProperties": true
        },
        "model.File": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/model.AccessType"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.FileType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.FileType": {
            "type": "string",
            "enum": [
                "image"
            ],
            "x-enum-varnames": [
                "FileTypeImage"
            ]
        },
        "model.LDAPTestMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.LDAPTestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPTestMessage"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.OAuthProvider": {
            "type": "string",
            "enum": [
                "github",
                "google",
                "dingtalk",
                "wechat",
                "custom",
                "autoDiscover"
            ],
            "x-enum-comments": {
                "OAuthProviderAutoDiscover": "Auto Discover",
                "OAuthProviderCustom": "Custom",
                "OAuthProviderDingtalk": "DingTalk",
                "OAuthProviderGitHub": "GitHub",
                "OAuthProviderGoogle": "Google",
                "OAuthProviderWeChat": "WeChat"
            },
            "x-enum-varnames": [
                "OAuthProviderGitHub",
                "OAuthProviderGoogle",
                "OAuthProviderDingtalk",
                "OAuthProviderWeChat",
                "OAuthProviderCustom",
                "OAuthProviderAutoDiscover"
            ]
        },
        "model.OAuthSettings": {
            "type": "object",
            "properties": {
                "auth_endpoint": {
                    "type": "string"
                },
                "auto_create_user": {
                    "type": "boolean"
                },
                "avatar_field": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "$ref": "#/definitions/safe.String"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name": {
                    "description": "Provider display name",
                    "type": "string"
                },
                "email_field": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "full_name_field": {
                    "type": "string"
                },
                "icon_url": {
                    "description": "Provider icon URL",
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "provider": {
                    "$ref": "#/definitions/model.OAuthProvider"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "role_field": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_endpoint": {
                    "type": "string"
                },
                "userinfo_endpoint": {
                    "type": "string"
                },
                "username_field": {
                    "type": "string"
                },
                "wellknown_endpoint": {
                    "type": "string"
                }
            }
        },
        "model.PasswordComplexity": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "very_high"
            ],
            "x-enum-comments": {
                "PasswordComplexityHigh": "Secure: must include uppercase, lowercase, and numbers",
                "PasswordComplexityLow": "Insecure: any characters allowed",
                "PasswordComplexityMedium": "Medium: combination of any two of uppercase, lowercase, and numbers",
                "PasswordComplexityVeryHigh": "Very secure: must include uppercase, lowercase, numbers, and special characters"
            },
            "x-enum-varnames": [
                "PasswordComplexityLow",
                "PasswordComplexityMedium",
                "PasswordComplexityHigh",
                "PasswordComplexityVeryHigh"
            ]
        },
        "model.Permission": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PermissionGroup": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                }
            }
        },
        "model.PolicyDocument": {
            "type": "object",
            "properties": {
                "Statement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StatementEntry"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "policy_document": {
                    "description": "Permission configuration based on IAM-style policies, stored in JSON format",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PolicyDocument"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SMTPSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "encryption": {
                    "description": "None, SSL/TLS, STARTTLS",
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "mfa_code_template": {
                    "type": "string"
                },
                "password": {
                    "$ref": "#/definitions/safe.String"
                },
                "port": {
                    "type": "integer"
                },
                "reset_password_template": {
                    "type": "string"
                },
                "user_locked_template": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.SMTPTestRequest": {
            "type": "object",
            "required": [
                "to"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "encryption": {
                    "description": "None, SSL/TLS, STARTTLS",
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "mfa_code_template": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "reset_password_template": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "user_locked_template": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.SecuritySettings": {
            "type": "object",
            "properties": {
                "history_password_check": {
                    "type": "boolean"
                },
                "history_password_count": {
                    "type": "integer"
                },
                "login_failure_attempts": {
                    "type": "integer"
                },
                "login_failure_lock": {
                    "type": "boolean"
                },
                "login_failure_lockout_minutes": {
                    "type": "integer"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "password_complexity": {
                    "$ref": "#/definitions/model.PasswordComplexity"
                },
                "password_expiry_days": {
                    "type": "integer"
                },
                "password_min_length": {
                    "type": "integer"
                },
                "session_idle_timeout_minutes": {
                    "type": "integer"
                },
                "session_timeout_minutes": {
                    "type": "integer"
                },
                "user_inactive_days": {
                    "type": "integer"
                }
            }
        },
        "model.ServiceAccount": {
            "type": "object",
            "properties": {
                "access_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccountAccessKey"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_access": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                },
                "roles": {
                    "description": "Associations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ServiceAccountAccessKey": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_used": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_account_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Session": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_valid": {
                    "type": "boolean"
                },
                "last_active_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.StatementEntry": {
            "type": "object",
            "properties": {
                "Action": {
                    "description": "List of actions, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Condition": {
                    "description": "Conditions",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Condition"
                    }
                },
                "Effect": {
                    "description": "\"Allow\" or \"Deny\"",
                    "type": "string"
                },
                "Resource": {
                    "description": "List of resources, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.SystemSettings": {
            "type": "object",
            "properties": {
                "disable_local_user_login": {
                    "type": "boolean"
                },
                "home_page": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "disable_change_password": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password_changed_at": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "source": {
                    "$ref": "#/definitions/model.UserSource"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserSource": {
            "type": "string",
            "enum": [
                "local",
                "ldap",
                "oauth"
            ],
            "x-enum-varnames": [
                "UserSourceLocal",
                "UserSourceLDAP",
                "UserSourceOAuth"
            ]
        },
        "safe.String": {
            "type": "object"
        },
        "service.Chart": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Dataset"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "service.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "service.Dataset": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "service.EnableMFAResponse": {
            "type": "object",
            "properties": {
                "qr_code": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "service.HealthResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "mfa_token": {
                    "type": "string"
                },
                "mfa_type": {
                    "type": "string"
                },
                "needs_mfa": {
                    "type": "boolean"
                },
                "password_expired": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "service.OAuthLoginURLResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.SystemInfo": {
            "type": "object",
            "properties": {
                "cpu_cores": {
                    "type": "integer"
                },
                "go_routines": {
                    "type": "integer"
                },
                "go_version": {
                    "type": "string"
                },
                "heap_objects": {
                    "type": "integer"
                },
                "mem_usage": {
                    "type": "integer"
                },
                "role_count": {
                    "type": "integer"
                },
                "total_mem": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "service.TestOAuthCallbackResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "user_info": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "service.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "systemapi.CheckPasswordComplexityRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "systemapi.CheckPasswordComplexityResponse": {
            "type": "object",
            "properties": {
                "is_valid": {
                    "type": "boolean"
                }
            }
        },
        "systemapi.LDAPSettings": {
            "type": "object",
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "$ref": "#/definitions/safe.String"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "$ref": "#/definitions/safe.String"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "systemapi.SMTPTestResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "systemapi.UpdateLDAPSettingsRequest": {
            "type": "object",
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "err": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "util.MessageData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "util.PaginationResponse-model_AuditLog": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AuditLog"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_File": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.File"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_ServiceAccount": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccount"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_ServiceAccountAccessKey": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccountAccessKey"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_Session": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Session"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                },
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.Response-array_authorizationapi_OAuthProvider": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorizationapi.OAuthProvider"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_model_PermissionGroup": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PermissionGroup"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-authorizationapi_TokenResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authorizationapi.TokenResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_LDAPTestResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.LDAPTestResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_OAuthSettings": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.OAuthSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_PolicyDocument": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.PolicyDocument"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.Role"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SMTPSettings": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SMTPSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SecuritySettings": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SecuritySettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_ServiceAccount": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.ServiceAccount"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_ServiceAccountAccessKey": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.ServiceAccountAccessKey"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SystemSettings": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SystemSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.User"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_Charts": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/service.Chart"
                        }
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_EnableMFAResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.EnableMFAResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_HealthResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.HealthResult"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.LoginResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_OAuthLoginURLResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.OAuthLoginURLResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_SystemInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.SystemInfo"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_TestOAuthCallbackResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.TestOAuthCallbackResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_CheckPasswordComplexityResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.CheckPasswordComplexityResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_LDAPSettings": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.LDAPSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_SMTPTestResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.SMTPTestResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-util_MessageData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/util.MessageData"
                },
                "err": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1.4.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "EZ Console API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

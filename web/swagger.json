{
    "swagger": "2.0",
    "info": {
        "title": "EZ Console API",
        "contact": {},
        "version": "v1.4.0"
    },
    "paths": {
        "/api/ai/chat/sessions": {
            "get": {
                "description": "List chat sessions for the current user with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Chat"
                ],
                "summary": "List chat sessions",
                "operationId": "listChatSessions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AIChatSession"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new chat session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Chat"
                ],
                "summary": "Create chat session",
                "operationId": "createChatSession",
                "parameters": [
                    {
                        "description": "Chat session data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.CreateChatSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_AIChatSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/chat/sessions/{sessionId}": {
            "get": {
                "description": "Get a chat session by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Chat"
                ],
                "summary": "Get chat session",
                "operationId": "getChatSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_AIChatSession"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Stream chat responses using Server-Sent Events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "AI/Chat"
                ],
                "summary": "Stream chat",
                "operationId": "streamChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event stream",
                        "schema": {
                            "$ref": "#/definitions/ai.ChatStreamEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a chat session and all its messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Chat"
                ],
                "summary": "Delete chat session",
                "operationId": "deleteChatSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/models": {
            "get": {
                "description": "List AI models with pagination and search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "List AI models",
                "operationId": "listAIModels",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AIModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Create AI model",
                "operationId": "createAIModel",
                "parameters": [
                    {
                        "description": "AI model data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.CreateAIModelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_AIModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/models/{id}": {
            "get": {
                "description": "Get an AI model by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Get AI model",
                "operationId": "getAIModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_AIModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Update AI model",
                "operationId": "updateAIModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AI model data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.UpdateAIModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_AIModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Delete AI model",
                "operationId": "deleteAIModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/models/{id}/set-default": {
            "post": {
                "description": "Set an AI model as default",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Set default AI model",
                "operationId": "setDefaultAIModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/models/{id}/test": {
            "post": {
                "description": "Test an AI model connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI/Models"
                ],
                "summary": "Test AI model",
                "operationId": "testAIModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/auth/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "User login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/auth/logout": {
            "post": {
                "description": "User logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "User logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/ldap/users": {
            "get": {
                "description": "Get LDAP users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get LDAP users",
                "operationId": "getLdapUsers",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Skip existing users",
                        "name": "skip_existing",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/disable": {
            "post": {
                "description": "Disable MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Disable MFA",
                "operationId": "disableMfa",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/enable": {
            "post": {
                "description": "Enable MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Enable MFA",
                "operationId": "enableMfa",
                "parameters": [
                    {
                        "description": "MFA Type",
                        "name": "mfa_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_EnableMFAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/mfa/verify": {
            "post": {
                "description": "Verify and activate MFA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/MFA"
                ],
                "summary": "Verify and activate MFA",
                "operationId": "verifyAndActivateMfa",
                "parameters": [
                    {
                        "description": "MFA Type",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.VerifyAndActivateMFARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/permissions": {
            "get": {
                "description": "Get a list of permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Permission"
                ],
                "summary": "Get a list of permissions",
                "operationId": "listPermissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_PermissionGroup"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile": {
            "get": {
                "description": "Get current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get current user's information",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update current user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update current user's information",
                "operationId": "updateCurrentUser",
                "parameters": [
                    {
                        "description": "Update current user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateCurrentUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/audit-logs": {
            "get": {
                "description": "Get current user's audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get current user's audit logs",
                "operationId": "getCurrentUserLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/password": {
            "put": {
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile"
                ],
                "summary": "Change user password",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions": {
            "get": {
                "description": "Get all sessions for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Get all sessions for the user",
                "operationId": "getUserSessions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_service_SessionInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions/terminate-others": {
            "post": {
                "description": "Terminate all sessions except the current one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Terminate all sessions except the current one",
                "operationId": "terminateOtherSessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/profile/sessions/{id}": {
            "delete": {
                "description": "Terminate the specified session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Profile/Sessions"
                ],
                "summary": "Terminate the specified session",
                "operationId": "terminateSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/refresh": {
            "post": {
                "description": "Refresh user's JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Refresh user's JWT token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-authorizationapi_TokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles": {
            "get": {
                "description": "Get a list of roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get a list of roles",
                "operationId": "listRoles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Create a new role",
                "operationId": "createRole",
                "parameters": [
                    {
                        "description": "Create role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}": {
            "get": {
                "description": "Get a role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get a role by ID",
                "operationId": "getRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Update a role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Delete a role",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}/permissions": {
            "put": {
                "description": "Assign permissions to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Assign permissions to a role",
                "operationId": "assignPermissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign permissions request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignPermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/roles/{id}/policy": {
            "get": {
                "description": "Get the policy document for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Get the policy document for a role",
                "operationId": "getRolePolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_PolicyDocument"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Set the policy for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Role"
                ],
                "summary": "Set the policy for a role",
                "operationId": "setRolePolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set role policy request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PolicyDocument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts": {
            "get": {
                "description": "Get service account list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account list",
                "operationId": "getServiceAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Create service account",
                "operationId": "createServiceAccount",
                "parameters": [
                    {
                        "description": "Create service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateServiceAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}": {
            "get": {
                "description": "Get service account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account by ID",
                "operationId": "getServiceAccountById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account",
                "operationId": "updateServiceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Delete service account",
                "operationId": "deleteServiceAccount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/access-keys": {
            "get": {
                "description": "Get service account access keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account access keys",
                "operationId": "getServiceAccountAccessKeys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_ServiceAccountAccessKey"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Create service account access key",
                "operationId": "createServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create service account access key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.CreateServiceAccountAccessKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-authorizationapi_CreateServiceAccountAccessKeyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/access-keys/{keyId}": {
            "put": {
                "description": "Update service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account access key",
                "operationId": "updateServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access key ID",
                        "name": "keyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account access key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountAccessKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccountAccessKey"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete service account access key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Delete service account access key",
                "operationId": "deleteServiceAccountAccessKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access key ID",
                        "name": "keyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/policy": {
            "get": {
                "description": "Get service account policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account policy",
                "operationId": "getServiceAccountPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_PolicyDocument"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Set service account policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Set service account policy",
                "operationId": "setServiceAccountPolicy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set service account policy request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.SetServiceAccountPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/roles": {
            "get": {
                "description": "Get service account roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Get service account roles",
                "operationId": "getServiceAccountRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Assign roles to service account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Assign roles to service account",
                "operationId": "assignServiceAccountRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign roles to service account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignServiceAccountRolesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_Role"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/service-accounts/{id}/status": {
            "put": {
                "description": "Update service account status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/ServiceAccount"
                ],
                "summary": "Update service account status",
                "operationId": "updateServiceAccountStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update service account status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateServiceAccountStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ServiceAccount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users": {
            "get": {
                "description": "Get a list of users with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user list",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Keywords for searching",
                        "name": "keywords",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status of the user",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Create a new user",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}": {
            "get": {
                "description": "Get a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user by ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Delete a user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/audit-logs": {
            "get": {
                "description": "Get user's audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Get user's audit logs",
                "operationId": "getUserLogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/password": {
            "put": {
                "description": "Reset a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Reset a user's password",
                "operationId": "resetUserPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reset user password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.ResetUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-authorizationapi_ResetUserPasswordResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/restore": {
            "post": {
                "description": "Restore a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Restore a user",
                "operationId": "restoreUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/roles": {
            "post": {
                "description": "Assign roles to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Assign roles to a user",
                "operationId": "assignRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign roles to user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.AssignRolesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/status": {
            "put": {
                "description": "Update a user's status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Update a user's status",
                "operationId": "updateUserStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authorizationapi.UpdateUserStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/authorization/users/{id}/unlock": {
            "post": {
                "description": "Unlock a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization/Users"
                ],
                "summary": "Unlock a user",
                "operationId": "unlockUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files": {
            "get": {
                "description": "Get file list",
                "tags": [
                    "File Management"
                ],
                "summary": "Get file list",
                "operationId": "listFiles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "File type",
                        "name": "file_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access Type",
                        "name": "access",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload file",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "File Management"
                ],
                "summary": "Upload file",
                "operationId": "uploadFile",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access type",
                        "name": "access",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "File type",
                        "name": "type",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files/{fileKey}": {
            "get": {
                "description": "Download file",
                "tags": [
                    "File Management"
                ],
                "summary": "Download file",
                "operationId": "downloadFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File key",
                        "name": "fileKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ldap-settings/test": {
            "post": {
                "description": "Test LDAP connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Test LDAP connection",
                "operationId": "testLdapConnection",
                "parameters": [
                    {
                        "description": "LDAP test request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.LDAPTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_LDAPTestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/oauth/callback": {
            "get": {
                "description": "Handle the OAuth callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Handle the OAuth callback",
                "operationId": "handleCallback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State",
                        "name": "state",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/oauth/login/{provider}": {
            "get": {
                "description": "Get the OAuth login URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Get the OAuth login URL",
                "operationId": "getLoginUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_OAuthLoginURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/oauth/providers": {
            "get": {
                "description": "Get the list of available OAuth providers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Get the list of available OAuth providers",
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_authorizationapi_OAuthProvider"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/statistics": {
            "get": {
                "description": "Get statistics",
                "tags": [
                    "Statistics"
                ],
                "summary": "Get statistics",
                "operationId": "getStatistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_Charts"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/audit-logs": {
            "get": {
                "description": "Get all audit logs, supports multiple filtering conditions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Audit Log"
                ],
                "summary": "Get audit logs",
                "operationId": "getAuditLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_AuditLog"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/base-settings": {
            "get": {
                "description": "Get all system settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Base"
                ],
                "summary": "Get all system settings",
                "operationId": "getSystemBaseSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SystemSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Batch update system settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Base"
                ],
                "summary": "Batch update system settings",
                "operationId": "updateSystemBaseSettings",
                "parameters": [
                    {
                        "description": "Base system settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SystemSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/health": {
            "get": {
                "description": "Check the health of the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Health"
                ],
                "summary": "Health check",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_HealthResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/info": {
            "get": {
                "description": "Get system information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Info"
                ],
                "summary": "Get system information",
                "operationId": "getSystemInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_SystemInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/ldap-settings": {
            "get": {
                "description": "Get LDAP settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Get LDAP settings",
                "operationId": "getLdapSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_LDAPSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update LDAP settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Update LDAP settings",
                "operationId": "updateLdapSettings",
                "parameters": [
                    {
                        "description": "Update LDAP settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.UpdateLDAPSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/ldap-settings/import": {
            "post": {
                "description": "Import LDAP users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/LDAP"
                ],
                "summary": "Import LDAP users",
                "operationId": "importLdapUsers",
                "parameters": [
                    {
                        "description": "import ldap user request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/systemapi.ImportLDAPUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_model_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings": {
            "get": {
                "description": "Get OAuth settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Get OAuth settings",
                "operationId": "getOauthSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_OAuthSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update OAuth settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Update OAuth settings",
                "operationId": "updateOauthSettings",
                "parameters": [
                    {
                        "description": "Update OAuth settings request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.UpdateOAuthSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_OAuthSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings/test": {
            "post": {
                "description": "Test OAuth connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Test OAuth connection",
                "operationId": "testOauthConnection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_OAuthLoginURLResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/oauth-settings/test-callback": {
            "post": {
                "description": "Test OAuth callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/OAuth"
                ],
                "summary": "Test OAuth callback",
                "operationId": "testOauthCallback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_TestOAuthCallbackResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/security-settings": {
            "get": {
                "description": "Get security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Get security settings",
                "operationId": "getSecuritySettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SecuritySettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Update security settings",
                "operationId": "updateSecuritySettings",
                "parameters": [
                    {
                        "description": "Update security settings request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SecuritySettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SecuritySettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/security-settings/check-password": {
            "post": {
                "description": "Check password complexity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/Security"
                ],
                "summary": "Check password complexity",
                "operationId": "checkPasswordComplexity",
                "parameters": [
                    {
                        "description": "Check password complexity request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemapi.CheckPasswordComplexityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_CheckPasswordComplexityResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/site": {
            "get": {
                "description": "Get site config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System/Site"
                ],
                "summary": "Get site config",
                "operationId": "getSiteConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-service_SiteConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/smtp-settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the current SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Get SMTP settings",
                "operationId": "getSmtpSettings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved SMTP settings",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SMTPSettings"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Update SMTP settings",
                "operationId": "updateSmtpSettings",
                "parameters": [
                    {
                        "description": "SMTP settings to update",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SMTPSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_SMTPSettings"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/system/smtp-settings/test": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sends a test email to the specified recipient using the provided or saved SMTP settings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Settings/SMTP"
                ],
                "summary": "Test SMTP connection",
                "operationId": "testSmtpConnection",
                "parameters": [
                    {
                        "description": "SMTP test request, including recipient and optional SMTP settings to test with",
                        "name": "testRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SMTPTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-systemapi_SMTPTestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during test",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/toolsets": {
            "get": {
                "description": "List toolsets with pagination and search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "List toolsets",
                "operationId": "listToolSets",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.PaginationResponse-model_ToolSet"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new toolset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Create toolset",
                "operationId": "createToolSet",
                "parameters": [
                    {
                        "description": "Toolset data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.CreateToolSetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ToolSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/toolsets/types": {
            "get": {
                "description": "Get the type definitions for toolsets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Get toolset type definitions",
                "operationId": "getToolSetTypeDefinitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-array_service_ToolSetTypeDefinition"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/toolsets/{id}": {
            "get": {
                "description": "Get a toolset by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Get toolset",
                "operationId": "getToolSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Toolset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ToolSet"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a toolset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Update toolset",
                "operationId": "updateToolSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Toolset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Toolset data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiapi.UpdateToolSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-model_ToolSet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a toolset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Delete toolset",
                "operationId": "deleteToolSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Toolset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/toolsets/{id}/test": {
            "post": {
                "description": "Test a toolset connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ToolSets"
                ],
                "summary": "Test toolset",
                "operationId": "testToolSet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Toolset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response-util_MessageData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ai.ChatStreamEvent": {
            "type": "object",
            "required": [
                "content",
                "event_type",
                "message_id",
                "role",
                "tool_calls"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "event_type": {
                    "$ref": "#/definitions/ai.EventType"
                },
                "message_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.AIChatMessageRole"
                },
                "tool_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ai.ToolCall"
                    }
                }
            }
        },
        "ai.EventType": {
            "type": "string",
            "enum": [
                "content",
                "tool_call",
                "error"
            ],
            "x-enum-varnames": [
                "EventTypeContent",
                "EventTypeToolCall",
                "EventTypeError"
            ]
        },
        "ai.FunctionCall": {
            "type": "object",
            "required": [
                "arguments",
                "name"
            ],
            "properties": {
                "arguments": {
                    "description": "call function with arguments in JSON format",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ai.ToolCall": {
            "type": "object",
            "required": [
                "error",
                "function",
                "id",
                "index",
                "start_time",
                "status",
                "type"
            ],
            "properties": {
                "error": {
                    "type": "string"
                },
                "function": {
                    "$ref": "#/definitions/ai.FunctionCall"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "description": "Index is not nil only in chat completion chunk object",
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/ai.ToolCallStatus"
                },
                "type": {
                    "$ref": "#/definitions/openai.ToolType"
                }
            }
        },
        "ai.ToolCallStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "ToolCallStatusPending",
                "ToolCallStatusRunning",
                "ToolCallStatusCompleted",
                "ToolCallStatusFailed"
            ]
        },
        "aiapi.CreateAIModelRequest": {
            "type": "object",
            "required": [
                "api_key",
                "model_id",
                "name",
                "provider"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "config": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "model_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/model.AIModelProvider"
                }
            }
        },
        "aiapi.CreateChatSessionRequest": {
            "type": "object",
            "required": [
                "model_id",
                "title"
            ],
            "properties": {
                "model_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "aiapi.CreateToolSetRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "config": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.ToolSetType"
                }
            }
        },
        "aiapi.SendMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "aiapi.UpdateAIModelRequest": {
            "type": "object",
            "required": [
                "api_key",
                "model_id",
                "name",
                "provider"
            ],
            "properties": {
                "api_key": {
                    "description": "Optional for updates",
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "config": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "model_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/model.AIModelProvider"
                }
            }
        },
        "aiapi.UpdateToolSetRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "config": {
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.ToolSetStatus"
                },
                "type": {
                    "$ref": "#/definitions/model.ToolSetType"
                }
            }
        },
        "authorizationapi.AssignPermissionsRequest": {
            "type": "object",
            "required": [
                "permission_ids"
            ],
            "properties": {
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.AssignRolesRequest": {
            "type": "object",
            "required": [
                "role_ids"
            ],
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.AssignServiceAccountRolesRequest": {
            "type": "object",
            "required": [
                "role_ids"
            ],
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "authorizationapi.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.CreateRoleRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "permissions",
                "policy_document"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.CreateServiceAccountAccessKeyRequest": {
            "type": "object",
            "required": [
                "description",
                "expires_at",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.CreateServiceAccountAccessKeyResponse": {
            "type": "object",
            "required": [
                "access_key_id",
                "created_at",
                "description",
                "expires_at",
                "id",
                "last_used",
                "name",
                "secret_access_key",
                "service_account_id",
                "status",
                "updated_at"
            ],
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_used": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret_access_key": {
                    "type": "string"
                },
                "service_account_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.CreateServiceAccountRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.LoginRequest": {
            "type": "object",
            "required": [
                "mfa_code",
                "mfa_token",
                "password",
                "username"
            ],
            "properties": {
                "mfa_code": {
                    "type": "string"
                },
                "mfa_token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.OAuthProvider": {
            "type": "object",
            "required": [
                "display_name",
                "icon_url",
                "name"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.ResetUserPasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.ResetUserPasswordResponse": {
            "type": "object",
            "required": [
                "new_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.SetServiceAccountPolicyRequest": {
            "type": "object",
            "required": [
                "policy_document"
            ],
            "properties": {
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.TokenResponse": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateCurrentUserRequest": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "full_name",
                "phone"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateRoleRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "permissions",
                "policy_document"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                }
            }
        },
        "authorizationapi.UpdateServiceAccountAccessKeyRequest": {
            "type": "object",
            "required": [
                "description",
                "expires_at",
                "name",
                "status"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "disabled"
                    ]
                }
            }
        },
        "authorizationapi.UpdateServiceAccountRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.UpdateServiceAccountStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "disabled"
                    ]
                }
            }
        },
        "authorizationapi.UpdateUserStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "authorizationapi.VerifyAndActivateMFARequest": {
            "type": "object",
            "required": [
                "code",
                "mfa_type"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "mfa_type": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.AIChatMessage": {
            "type": "object",
            "required": [
                "content",
                "created_at",
                "id",
                "message_time",
                "metadata",
                "role",
                "session_id",
                "status",
                "tokens_used",
                "tool_call_id",
                "tool_calls",
                "updated_at"
            ],
            "properties": {
                "content": {
                    "description": "Message content",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message_time": {
                    "description": "Message timestamp",
                    "type": "string"
                },
                "metadata": {
                    "description": "Additional metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIChatMessageMetadata"
                        }
                    ]
                },
                "role": {
                    "description": "Message role",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIChatMessageRole"
                        }
                    ]
                },
                "session_id": {
                    "description": "Session ID",
                    "type": "string"
                },
                "status": {
                    "description": "Message status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIChatMessageStatus"
                        }
                    ]
                },
                "tokens_used": {
                    "description": "Tokens used for this message",
                    "type": "integer"
                },
                "tool_call_id": {
                    "description": "Tool call ID (for tool messages)",
                    "type": "string"
                },
                "tool_calls": {
                    "description": "Tool calls (for assistant messages)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AIToolCall"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.AIChatMessageMetadata": {
            "type": "object",
            "additionalProperties": true
        },
        "model.AIChatMessageRole": {
            "type": "string",
            "enum": [
                "user",
                "assistant",
                "system",
                "tool"
            ],
            "x-enum-varnames": [
                "AIChatMessageRoleUser",
                "AIChatMessageRoleAssistant",
                "AIChatMessageRoleSystem",
                "AIChatMessageRoleTool"
            ]
        },
        "model.AIChatMessageStatus": {
            "type": "string",
            "enum": [
                "pending",
                "streaming",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "AIChatMessageStatusPending",
                "AIChatMessageStatusStreaming",
                "AIChatMessageStatusCompleted",
                "AIChatMessageStatusFailed"
            ]
        },
        "model.AIChatSession": {
            "type": "object",
            "required": [
                "created_at",
                "end_time",
                "id",
                "messages",
                "model_id",
                "start_time",
                "title",
                "updated_at",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "description": "Session end time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "description": "Messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AIChatMessage"
                    }
                },
                "model_id": {
                    "description": "AI model ID used",
                    "type": "string"
                },
                "start_time": {
                    "description": "Session start time",
                    "type": "string"
                },
                "title": {
                    "description": "Session title",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID",
                    "type": "string"
                }
            }
        },
        "model.AIFunctionCall": {
            "type": "object",
            "required": [
                "arguments",
                "name"
            ],
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.AIModel": {
            "type": "object",
            "required": [
                "api_key",
                "base_url",
                "config",
                "created_at",
                "created_by",
                "description",
                "id",
                "is_default",
                "model_id",
                "name",
                "provider",
                "status",
                "updated_at",
                "updated_by"
            ],
            "properties": {
                "api_key": {
                    "description": "API key (encrypted)",
                    "type": "string"
                },
                "base_url": {
                    "description": "Base URL (optional, for custom endpoints)",
                    "type": "string"
                },
                "config": {
                    "description": "Additional configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIModelConfig"
                        }
                    ]
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "Creator user ID",
                    "type": "string"
                },
                "description": {
                    "description": "Model description",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_default": {
                    "description": "Whether this is the default model",
                    "type": "boolean"
                },
                "model_id": {
                    "description": "Model ID (e.g., gpt-4, gpt-3.5-turbo)",
                    "type": "string"
                },
                "name": {
                    "description": "Model name",
                    "type": "string"
                },
                "provider": {
                    "description": "Provider (openai, etc.)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIModelProvider"
                        }
                    ]
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AIModelStatus"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "description": "Last updater user ID",
                    "type": "string"
                }
            }
        },
        "model.AIModelConfig": {
            "type": "object",
            "additionalProperties": true
        },
        "model.AIModelProvider": {
            "type": "string",
            "enum": [
                "openai"
            ],
            "x-enum-varnames": [
                "AIModelProviderOpenAI"
            ]
        },
        "model.AIModelStatus": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "x-enum-varnames": [
                "AIModelStatusEnabled",
                "AIModelStatusDisabled"
            ]
        },
        "model.AIToolCall": {
            "type": "object",
            "required": [
                "function",
                "id",
                "index",
                "type"
            ],
            "properties": {
                "function": {
                    "$ref": "#/definitions/model.AIFunctionCall"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.AccessType": {
            "type": "string",
            "enum": [
                "public",
                "private",
                "owner"
            ],
            "x-enum-varnames": [
                "AccessTypePublic",
                "AccessTypePrivate",
                "AccessTypeOwner"
            ]
        },
        "model.AuditLog": {
            "type": "object",
            "required": [
                "action",
                "action_name",
                "created_at",
                "details",
                "id",
                "ip",
                "ref_id",
                "status",
                "timestamp",
                "updated_at",
                "user_agent",
                "user_id",
                "username"
            ],
            "properties": {
                "action": {
                    "description": "Operation type",
                    "type": "string"
                },
                "action_name": {
                    "description": "Operation name",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "details": {
                    "description": "Operation details, in JSON format",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AuditLogDetail"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "description": "IP address of the operation",
                    "type": "string"
                },
                "ref_id": {
                    "description": "Associated resource ID",
                    "type": "string"
                },
                "status": {
                    "description": "Operation status: success, failed",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp of the operation",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_agent": {
                    "description": "User agent information",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID of the operator",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the operator",
                    "type": "string"
                }
            }
        },
        "model.AuditLogDetail": {
            "type": "object",
            "required": [
                "new_data",
                "old_data",
                "request"
            ],
            "properties": {
                "new_data": {},
                "old_data": {},
                "request": {}
            }
        },
        "model.Condition": {
            "type": "object",
            "additionalProperties": true
        },
        "model.File": {
            "type": "object",
            "required": [
                "access",
                "created_at",
                "id",
                "name",
                "size",
                "type",
                "updated_at"
            ],
            "properties": {
                "access": {
                    "$ref": "#/definitions/model.AccessType"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.FileType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.FileType": {
            "type": "string",
            "enum": [
                "image"
            ],
            "x-enum-varnames": [
                "FileTypeImage"
            ]
        },
        "model.LDAPTestMessage": {
            "type": "object",
            "required": [
                "message",
                "success"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.LDAPTestResponse": {
            "type": "object",
            "required": [
                "message",
                "success",
                "user"
            ],
            "properties": {
                "message": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPTestMessage"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.OAuthProviderType": {
            "type": "string",
            "enum": [
                "github",
                "google",
                "dingtalk",
                "wechat",
                "custom",
                "autoDiscover"
            ],
            "x-enum-comments": {
                "OAuthProviderAutoDiscover": "Auto Discover",
                "OAuthProviderCustom": "Custom",
                "OAuthProviderDingtalk": "DingTalk",
                "OAuthProviderGitHub": "GitHub",
                "OAuthProviderGoogle": "Google",
                "OAuthProviderWeChat": "WeChat"
            },
            "x-enum-varnames": [
                "OAuthProviderGitHub",
                "OAuthProviderGoogle",
                "OAuthProviderDingtalk",
                "OAuthProviderWeChat",
                "OAuthProviderCustom",
                "OAuthProviderAutoDiscover"
            ]
        },
        "model.OAuthSettings": {
            "type": "object",
            "required": [
                "auth_endpoint",
                "auto_create_user",
                "avatar_field",
                "client_id",
                "client_secret",
                "default_role",
                "display_name",
                "email_field",
                "enabled",
                "full_name_field",
                "icon_url",
                "issuer",
                "jwks_uri",
                "mfa_enabled",
                "provider",
                "redirect_uri",
                "role_field",
                "scope",
                "token_endpoint",
                "userinfo_endpoint",
                "username_field",
                "wellknown_endpoint"
            ],
            "properties": {
                "auth_endpoint": {
                    "type": "string"
                },
                "auto_create_user": {
                    "type": "boolean"
                },
                "avatar_field": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name": {
                    "description": "Provider display name",
                    "type": "string"
                },
                "email_field": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "full_name_field": {
                    "type": "string"
                },
                "icon_url": {
                    "description": "Provider icon URL",
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "provider": {
                    "$ref": "#/definitions/model.OAuthProviderType"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "role_field": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_endpoint": {
                    "type": "string"
                },
                "userinfo_endpoint": {
                    "type": "string"
                },
                "username_field": {
                    "type": "string"
                },
                "wellknown_endpoint": {
                    "type": "string"
                }
            }
        },
        "model.PasswordComplexity": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "very_high"
            ],
            "x-enum-comments": {
                "PasswordComplexityHigh": "Secure: must include uppercase, lowercase, and numbers",
                "PasswordComplexityLow": "Insecure: any characters allowed",
                "PasswordComplexityMedium": "Medium: combination of any two of uppercase, lowercase, and numbers",
                "PasswordComplexityVeryHigh": "Very secure: must include uppercase, lowercase, numbers, and special characters"
            },
            "x-enum-varnames": [
                "PasswordComplexityLow",
                "PasswordComplexityMedium",
                "PasswordComplexityHigh",
                "PasswordComplexityVeryHigh"
            ]
        },
        "model.Permission": {
            "type": "object",
            "required": [
                "code",
                "created_at",
                "description",
                "id",
                "name",
                "updated_at"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PermissionGroup": {
            "type": "object",
            "required": [
                "description",
                "name",
                "permissions"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                }
            }
        },
        "model.PolicyDocument": {
            "type": "object",
            "required": [
                "Statement"
            ],
            "properties": {
                "Statement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StatementEntry"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "required": [
                "created_at",
                "description",
                "id",
                "name",
                "permissions",
                "policy_document",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "policy_document": {
                    "description": "Permission configuration based on IAM-style policies, stored in JSON format",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PolicyDocument"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SMTPSettings": {
            "type": "object",
            "required": [
                "enabled",
                "encryption",
                "from_address",
                "from_name",
                "host",
                "mfa_code_template",
                "password",
                "port",
                "reset_password_template",
                "user_locked_template",
                "username"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "encryption": {
                    "description": "None, SSL/TLS, STARTTLS",
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "mfa_code_template": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "reset_password_template": {
                    "type": "string"
                },
                "user_locked_template": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.SMTPTestRequest": {
            "type": "object",
            "required": [
                "enabled",
                "encryption",
                "from_address",
                "from_name",
                "host",
                "mfa_code_template",
                "password",
                "password",
                "port",
                "reset_password_template",
                "to",
                "user_locked_template",
                "username"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "encryption": {
                    "description": "None, SSL/TLS, STARTTLS",
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "mfa_code_template": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "reset_password_template": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "user_locked_template": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.SecuritySettings": {
            "type": "object",
            "required": [
                "history_password_check",
                "history_password_count",
                "login_failure_attempts",
                "login_failure_lock",
                "login_failure_lockout_minutes",
                "mfa_enforced",
                "password_complexity",
                "password_expiry_days",
                "password_min_length",
                "session_idle_timeout_minutes",
                "session_timeout_minutes",
                "user_inactive_days"
            ],
            "properties": {
                "history_password_check": {
                    "type": "boolean"
                },
                "history_password_count": {
                    "type": "integer"
                },
                "login_failure_attempts": {
                    "type": "integer"
                },
                "login_failure_lock": {
                    "type": "boolean"
                },
                "login_failure_lockout_minutes": {
                    "type": "integer"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "password_complexity": {
                    "$ref": "#/definitions/model.PasswordComplexity"
                },
                "password_expiry_days": {
                    "type": "integer"
                },
                "password_min_length": {
                    "type": "integer"
                },
                "session_idle_timeout_minutes": {
                    "type": "integer"
                },
                "session_timeout_minutes": {
                    "type": "integer"
                },
                "user_inactive_days": {
                    "type": "integer"
                }
            }
        },
        "model.ServiceAccount": {
            "type": "object",
            "required": [
                "access_keys",
                "created_at",
                "description",
                "id",
                "last_access",
                "name",
                "policy_document",
                "roles",
                "status",
                "updated_at"
            ],
            "properties": {
                "access_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccountAccessKey"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_access": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy_document": {
                    "$ref": "#/definitions/model.PolicyDocument"
                },
                "roles": {
                    "description": "Associations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ServiceAccountAccessKey": {
            "type": "object",
            "required": [
                "access_key_id",
                "created_at",
                "description",
                "expires_at",
                "id",
                "last_used",
                "name",
                "service_account_id",
                "status",
                "updated_at"
            ],
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_used": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_account_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.StatementEntry": {
            "type": "object",
            "required": [
                "Action",
                "Condition",
                "Effect",
                "Resource"
            ],
            "properties": {
                "Action": {
                    "description": "List of actions, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Condition": {
                    "description": "Conditions",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Condition"
                    }
                },
                "Effect": {
                    "description": "\"Allow\" or \"Deny\"",
                    "type": "string"
                },
                "Resource": {
                    "description": "List of resources, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.SystemSettings": {
            "type": "object",
            "required": [
                "disable_local_user_login",
                "home_page",
                "logo",
                "name",
                "name_i18n"
            ],
            "properties": {
                "disable_local_user_login": {
                    "type": "boolean"
                },
                "home_page": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "model.ToolSet": {
            "type": "object",
            "required": [
                "config",
                "created_at",
                "created_by",
                "description",
                "id",
                "name",
                "status",
                "type",
                "updated_at",
                "updated_by"
            ],
            "properties": {
                "config": {
                    "description": "Additional configuration",
                    "type": "object"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "description": "Creator user ID",
                    "type": "string"
                },
                "description": {
                    "description": "Toolset description",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Toolset name",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ToolSetStatus"
                        }
                    ]
                },
                "type": {
                    "description": "Toolset type (mcp, etc.)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ToolSetType"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "description": "Last updater user ID",
                    "type": "string"
                }
            }
        },
        "model.ToolSetStatus": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "x-enum-varnames": [
                "ToolSetStatusEnabled",
                "ToolSetStatusDisabled"
            ]
        },
        "model.ToolSetType": {
            "type": "string",
            "enum": [
                "mcp"
            ],
            "x-enum-varnames": [
                "ToolSetTypeMCP"
            ]
        },
        "model.User": {
            "type": "object",
            "required": [
                "avatar",
                "created_at",
                "disable_change_password",
                "email",
                "full_name",
                "id",
                "last_login",
                "ldap_dn",
                "mfa_enabled",
                "mfa_enforced",
                "oauth_id",
                "oauth_provider",
                "password_changed_at",
                "phone",
                "roles",
                "source",
                "status",
                "updated_at",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "disable_change_password": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password_changed_at": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "source": {
                    "$ref": "#/definitions/model.UserSource"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserSource": {
            "type": "string",
            "enum": [
                "local",
                "ldap",
                "oauth"
            ],
            "x-enum-varnames": [
                "UserSourceLocal",
                "UserSourceLDAP",
                "UserSourceOAuth"
            ]
        },
        "openai.ToolType": {
            "type": "string",
            "enum": [
                "function"
            ],
            "x-enum-varnames": [
                "ToolTypeFunction"
            ]
        },
        "service.Chart": {
            "type": "object",
            "required": [
                "color",
                "datasets",
                "icon",
                "labels",
                "title",
                "value",
                "width"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Dataset"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "service.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "mfa_enforced",
                "password",
                "role_ids",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "service.Dataset": {
            "type": "object",
            "required": [
                "color",
                "data",
                "label"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "service.EnableMFAResponse": {
            "type": "object",
            "required": [
                "qr_code",
                "secret",
                "token"
            ],
            "properties": {
                "qr_code": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "service.HealthResult": {
            "type": "object",
            "required": [
                "message",
                "reason",
                "status"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.LoginResponse": {
            "type": "object",
            "required": [
                "expires_at",
                "mfa_token",
                "mfa_type",
                "needs_mfa",
                "password_expired",
                "token",
                "user"
            ],
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "mfa_token": {
                    "type": "string"
                },
                "mfa_type": {
                    "type": "string"
                },
                "needs_mfa": {
                    "type": "boolean"
                },
                "password_expired": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "service.MenuConfig": {
            "type": "object",
            "required": [
                "hide",
                "icon",
                "name",
                "path"
            ],
            "properties": {
                "hide": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "service.Navigation": {
            "type": "object",
            "required": [
                "name",
                "path"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "service.OAuthLoginURLResponse": {
            "type": "object",
            "required": [
                "state",
                "url"
            ],
            "properties": {
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.SessionInfo": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "ip_address",
                "is_current",
                "last_active_at",
                "location",
                "user_agent"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_current": {
                    "type": "boolean"
                },
                "last_active_at": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "service.SiteConfig": {
            "type": "object",
            "required": [
                "disable_local_user_login",
                "home_page",
                "logo",
                "menu",
                "name",
                "name_i18n",
                "navigation"
            ],
            "properties": {
                "disable_local_user_login": {
                    "type": "boolean"
                },
                "home_page": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "menu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.MenuConfig"
                    }
                },
                "name": {
                    "type": "string"
                },
                "name_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "navigation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Navigation"
                    }
                }
            }
        },
        "service.SystemInfo": {
            "type": "object",
            "required": [
                "cpu_cores",
                "go_routines",
                "go_version",
                "heap_objects",
                "mem_usage",
                "role_count",
                "total_mem",
                "uptime",
                "user_count"
            ],
            "properties": {
                "cpu_cores": {
                    "type": "integer"
                },
                "go_routines": {
                    "type": "integer"
                },
                "go_version": {
                    "type": "string"
                },
                "heap_objects": {
                    "type": "integer"
                },
                "mem_usage": {
                    "type": "integer"
                },
                "role_count": {
                    "type": "integer"
                },
                "total_mem": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "service.TestOAuthCallbackResponse": {
            "type": "object",
            "required": [
                "user",
                "user_info"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "user_info": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "service.ToolSetTypeDefinition": {
            "type": "object",
            "required": [
                "config_fields",
                "description",
                "name",
                "tool_set_type"
            ],
            "properties": {
                "config_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/toolset.ConfigField"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tool_set_type": {
                    "type": "string"
                }
            }
        },
        "service.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "systemapi.CheckPasswordComplexityRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "systemapi.CheckPasswordComplexityResponse": {
            "type": "object",
            "required": [
                "is_valid"
            ],
            "properties": {
                "is_valid": {
                    "type": "boolean"
                }
            }
        },
        "systemapi.ImportLDAPUsersRequest": {
            "type": "object",
            "properties": {
                "user_dn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "systemapi.LDAPSettings": {
            "type": "object",
            "required": [
                "base_dn",
                "bind_dn",
                "bind_password",
                "ca_cert",
                "client_cert",
                "client_key",
                "default_role",
                "display_name_attr",
                "email_attr",
                "enabled",
                "insecure",
                "server_url",
                "start_tls",
                "timeout",
                "timeout",
                "user_attr",
                "user_filter"
            ],
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "systemapi.LDAPTestRequest": {
            "type": "object",
            "required": [
                "base_dn",
                "bind_dn",
                "bind_password",
                "bind_password",
                "ca_cert",
                "client_cert",
                "client_key",
                "default_role",
                "display_name_attr",
                "email_attr",
                "enabled",
                "insecure",
                "password",
                "server_url",
                "start_tls",
                "timeout",
                "user_attr",
                "user_filter",
                "username"
            ],
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "timeout": {
                    "$ref": "#/definitions/time.Duration"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "systemapi.SMTPTestResponse": {
            "type": "object",
            "required": [
                "message",
                "success"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "systemapi.UpdateLDAPSettingsRequest": {
            "type": "object",
            "required": [
                "base_dn",
                "bind_dn",
                "bind_password",
                "bind_password",
                "ca_cert",
                "client_cert",
                "client_key",
                "client_key",
                "default_role",
                "display_name_attr",
                "email_attr",
                "enabled",
                "insecure",
                "server_url",
                "start_tls",
                "timeout",
                "timeout",
                "user_attr",
                "user_filter"
            ],
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "systemapi.UpdateOAuthSettingsRequest": {
            "type": "object",
            "required": [
                "auth_endpoint",
                "auto_create_user",
                "avatar_field",
                "client_id",
                "client_secret",
                "client_secret",
                "default_role",
                "display_name",
                "email_field",
                "enabled",
                "full_name_field",
                "icon_url",
                "issuer",
                "jwks_uri",
                "mfa_enabled",
                "provider",
                "redirect_uri",
                "role_field",
                "scope",
                "token_endpoint",
                "userinfo_endpoint",
                "username_field",
                "wellknown_endpoint"
            ],
            "properties": {
                "auth_endpoint": {
                    "type": "string"
                },
                "auto_create_user": {
                    "type": "boolean"
                },
                "avatar_field": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name": {
                    "description": "Provider display name",
                    "type": "string"
                },
                "email_field": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "full_name_field": {
                    "type": "string"
                },
                "icon_url": {
                    "description": "Provider icon URL",
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "provider": {
                    "$ref": "#/definitions/model.OAuthProviderType"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "role_field": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_endpoint": {
                    "type": "string"
                },
                "userinfo_endpoint": {
                    "type": "string"
                },
                "username_field": {
                    "type": "string"
                },
                "wellknown_endpoint": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute"
            ]
        },
        "toolset.ConfigField": {
            "type": "object",
            "required": [
                "default",
                "description",
                "name",
                "options",
                "required",
                "type"
            ],
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/toolset.ConfigFieldOptions"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/toolset.FieldType"
                }
            }
        },
        "toolset.ConfigFieldOptions": {
            "type": "object",
            "required": [
                "label",
                "value"
            ],
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "toolset.FieldType": {
            "type": "string",
            "enum": [
                "string",
                "number",
                "boolean",
                "array",
                "object"
            ],
            "x-enum-varnames": [
                "FieldTypeString",
                "FieldTypeNumber",
                "FieldTypeBoolean",
                "FieldTypeArray",
                "FieldTypeObject"
            ]
        },
        "util.ErrorResponse": {
            "type": "object",
            "required": [
                "code",
                "err",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "err": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "util.MessageData": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "util.PaginationResponse-model_AIChatSession": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AIChatSession"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_AIModel": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AIModel"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_AuditLog": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AuditLog"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_File": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.File"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_Role": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_ServiceAccount": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccount"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_ToolSet": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ToolSet"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.PaginationResponse-model_User": {
            "type": "object",
            "required": [
                "code",
                "current",
                "data",
                "page_size",
                "total"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.Response-array_authorizationapi_OAuthProvider": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorizationapi.OAuthProvider"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_model_File": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.File"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_model_PermissionGroup": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PermissionGroup"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_model_ServiceAccountAccessKey": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ServiceAccountAccessKey"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_model_User": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_service_SessionInfo": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.SessionInfo"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-array_service_ToolSetTypeDefinition": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ToolSetTypeDefinition"
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-authorizationapi_CreateServiceAccountAccessKeyResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authorizationapi.CreateServiceAccountAccessKeyResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-authorizationapi_ResetUserPasswordResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authorizationapi.ResetUserPasswordResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-authorizationapi_TokenResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authorizationapi.TokenResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_AIChatSession": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.AIChatSession"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_AIModel": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.AIModel"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_LDAPTestResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.LDAPTestResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_OAuthSettings": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.OAuthSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_PolicyDocument": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.PolicyDocument"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_Role": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.Role"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SMTPSettings": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SMTPSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SecuritySettings": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SecuritySettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_ServiceAccount": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.ServiceAccount"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_ServiceAccountAccessKey": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.ServiceAccountAccessKey"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_SystemSettings": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.SystemSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_ToolSet": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.ToolSet"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-model_User": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/model.User"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_Charts": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/service.Chart"
                        }
                    }
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_EnableMFAResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.EnableMFAResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_HealthResult": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.HealthResult"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_LoginResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.LoginResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_OAuthLoginURLResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.OAuthLoginURLResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_SiteConfig": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.SiteConfig"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_SystemInfo": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.SystemInfo"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-service_TestOAuthCallbackResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/service.TestOAuthCallbackResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-string": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_CheckPasswordComplexityResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.CheckPasswordComplexityResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_LDAPSettings": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.LDAPSettings"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-systemapi_SMTPTestResponse": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/systemapi.SMTPTestResponse"
                },
                "err": {
                    "type": "string"
                }
            }
        },
        "util.Response-util_MessageData": {
            "type": "object",
            "required": [
                "code",
                "data",
                "err"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/util.MessageData"
                },
                "err": {
                    "type": "string"
                }
            }
        }
    }
}
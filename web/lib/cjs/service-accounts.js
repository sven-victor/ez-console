"use strict";const e=require("./vendor.js"),x=require("react"),t=require("antd"),l=require("@ant-design/icons"),N=require("react-router-dom"),w=require("./components.js"),v=require("./index.js"),_=require("./base.js"),F=require("react-i18next"),$=require("./not_found.js"),P=require("ahooks"),J=require("dayjs"),W=require("./contexts.js"),H=require("antd-style"),G=({serviceAccountID:i,onClose:s,open:E=!1,onSuccess:b})=>{const{t:u}=F.useTranslation("authorization"),{t:o}=F.useTranslation("common"),[d]=t.Form.useForm(),[h,j]=x.useState(!1),{run:A,loading:r}=P.useRequest(R=>i?v.api.authorization.updateServiceAccount({id:i},R):v.api.authorization.createServiceAccount(R),{onSuccess:()=>{t.message.success(u("serviceAccount.saveSuccess",{defaultValue:"Service account saved successfully."})),s(),b==null||b()},onError:()=>{t.message.error(u("serviceAccount.saveError",{defaultValue:"Failed to save service account."}))},manual:!0});return x.useEffect(()=>{const R=async y=>{j(!0);try{const g=await v.api.authorization.getServiceAccountById({id:y});d.setFieldsValue({name:g.name,description:g.description})}catch{t.message.error(u("serviceAccount.loadError",{defaultValue:"Failed to load service account."}))}finally{j(!1)}};E&&(d.resetFields(),i&&R(i))},[i,E]),e.jsxRuntimeExports.jsx(t.Modal,{title:i?u("serviceAccount.edit",{defaultValue:"Edit Service Account"}):u("serviceAccount.create",{defaultValue:"Create Service Account"}),width:500,onClose:()=>{d.resetFields(),s()},open:E,footer:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(t.Button,{onClick:s,children:o("cancel",{defaultValue:"Cancel"})}),e.jsxRuntimeExports.jsx(t.Button,{type:"primary",onClick:d.submit,loading:r||h,children:o("save",{defaultValue:"Save"})})]}),children:e.jsxRuntimeExports.jsxs(t.Form,{form:d,layout:"vertical",onFinish:A,children:[e.jsxRuntimeExports.jsx(t.Form.Item,{label:u("serviceAccount.name",{defaultValue:"Name"}),name:"name",rules:[{required:!0,message:u("serviceAccount.nameRequired",{defaultValue:"Please enter a name for the service account."})}],children:e.jsxRuntimeExports.jsx(t.Input,{placeholder:u("serviceAccount.namePlaceholder",{defaultValue:"Enter service account name"})})}),e.jsxRuntimeExports.jsx(t.Form.Item,{label:u("serviceAccount.description",{defaultValue:"Description"}),name:"description",children:e.jsxRuntimeExports.jsx(e.TextArea,{rows:4,placeholder:u("serviceAccount.descriptionPlaceholder",{defaultValue:"Enter service account description (optional)"})})})]})})},Q=()=>{const{t:i}=F.useTranslation("authorization"),{t:s}=F.useTranslation("common"),E=N.useNavigate(),[b]=t.Form.useForm(),[u]=t.Form.useForm(),[o,d]=x.useState(!1),[h,j]=x.useState([]),[A,r]=x.useState(0),[R,y]=x.useState(!1),[g,S]=x.useState(null),[V,n]=x.useState({current:_.PAGINATION.DEFAULT_CURRENT,page_size:_.PAGINATION.DEFAULT_PAGE_SIZE,search:void 0}),p=x.useCallback(async()=>{try{d(!0);const c=await v.api.authorization.getServiceAccounts(V);j(c.data||[]),r(c.total||0)}catch(c){console.error(i("serviceAccount.loadError",{defaultValue:"Failed to load service accounts"}),c),t.message.error(i("serviceAccount.loadError",{defaultValue:"Failed to load service accounts"}))}finally{d(!1)}},[V,i]);x.useEffect(()=>{p()},[p]);const C=c=>{n({...V,current:_.PAGINATION.DEFAULT_CURRENT,search:c.search})},T=()=>{b.resetFields(),n({current:_.PAGINATION.DEFAULT_CURRENT,page_size:_.PAGINATION.DEFAULT_PAGE_SIZE,search:void 0})},D=(c,m)=>{n(z=>({...z,current:c,page_size:m}))},I=()=>{S(null),y(!0)},K=c=>{S(c.id),y(!0)},O=()=>{y(!1),u.resetFields()},f=async c=>{try{await v.api.authorization.deleteServiceAccount({id:c}),t.message.success(i("serviceAccount.deleteSuccess",{defaultValue:"Service account deleted successfully"})),p()}catch(m){console.error(i("serviceAccount.deleteError",{defaultValue:"Failed to delete service account"}),m),t.message.error(i("serviceAccount.deleteError",{defaultValue:"Failed to delete service account"}))}},k=async c=>{const m=c.status==="active"?"disabled":"active";try{await v.api.authorization.updateServiceAccountStatus({id:c.id},{status:m}),t.message.success(i("serviceAccount.statusUpdateSuccess",{defaultValue:"Status updated successfully"})),p()}catch(z){console.error(i("serviceAccount.statusUpdateError",{defaultValue:"Failed to update status"}),z),t.message.error(i("serviceAccount.statusUpdateError",{defaultValue:"Failed to update status"}))}},a=[{title:i("serviceAccount.name",{defaultValue:"Name"}),dataIndex:"name",key:"name",render:(c,m)=>e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:view",fallback:c,children:e.jsxRuntimeExports.jsx(N.Link,{to:`/authorization/service-accounts/${m.id}`,children:c})})},{title:i("serviceAccount.description",{defaultValue:"Description"}),dataIndex:"description",key:"description",render:c=>e.jsxRuntimeExports.jsx(t.Tooltip,{title:c,children:e.jsxRuntimeExports.jsx("span",{children:(c==null?void 0:c.length)>30?`${c.substring(0,30)}...`:c})})},{title:i("serviceAccount.status",{defaultValue:"Status"}),dataIndex:"status",key:"status",render:c=>c==="active"?e.jsxRuntimeExports.jsx(t.Badge,{status:"success",text:i("serviceAccount.statusActive",{defaultValue:"Active"})}):e.jsxRuntimeExports.jsx(t.Badge,{status:"error",text:i("serviceAccount.statusDisabled",{defaultValue:"Disabled"})})},{title:i("serviceAccount.roles",{defaultValue:"Roles"}),key:"roles",render:(c,m)=>{var z;return e.jsxRuntimeExports.jsxs(t.Space,{size:[0,4],wrap:!0,children:[(z=m.roles)==null?void 0:z.map(U=>e.jsxRuntimeExports.jsx(t.Tag,{color:"blue",children:U.name},U.id)),(!m.roles||m.roles.length===0)&&e.jsxRuntimeExports.jsx(t.Tag,{children:i("serviceAccount.noRoles",{defaultValue:"No Roles"})})]})}},{title:i("serviceAccount.hasPolicy",{defaultValue:"Has Policy"}),key:"policy",render:(c,m)=>m.policy_document&&m.policy_document.Statement&&m.policy_document.Statement.length>0?e.jsxRuntimeExports.jsx(t.Tag,{color:"green",icon:e.jsxRuntimeExports.jsx(l.CheckCircleOutlined,{}),children:i("serviceAccount.hasPolicy",{defaultValue:"Has Policy"})}):e.jsxRuntimeExports.jsx(t.Tag,{color:"default",icon:e.jsxRuntimeExports.jsx(l.CloseCircleOutlined,{}),children:i("serviceAccount.noPolicy",{defaultValue:"No Policy"})})},{title:i("serviceAccount.createdAt",{defaultValue:"Created At"}),dataIndex:"created_at",key:"created_at",render:c=>_.formatDate(c)},{title:i("serviceAccount.lastAccess",{defaultValue:"Last Access"}),dataIndex:"last_access",key:"last_access",render:c=>c?_.formatDate(c):i("serviceAccount.neverAccessed",{defaultValue:"Never Accessed"})},{title:s("actions",{defaultValue:"Actions"}),key:"action",render:(c,m)=>e.jsxRuntimeExports.jsxs(t.Space,{size:"small",children:[e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:view",children:e.jsxRuntimeExports.jsx(t.Tooltip,{title:i("serviceAccount.viewDetail",{defaultValue:"View Detail"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",size:"small",icon:e.jsxRuntimeExports.jsx(l.EyeOutlined,{}),onClick:()=>E(`/authorization/service-accounts/${m.id}`)})})}),e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:update",children:e.jsxRuntimeExports.jsx(t.Tooltip,{title:i("serviceAccount.edit",{defaultValue:"Edit"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",size:"small",icon:e.jsxRuntimeExports.jsx(l.EditOutlined,{}),onClick:()=>K(m)})})}),e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:update",children:e.jsxRuntimeExports.jsx(t.Tooltip,{title:m.status==="active"?s("disable",{defaultValue:"Disable"}):s("enable",{defaultValue:"Enable"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",size:"small",icon:m.status==="active"?e.jsxRuntimeExports.jsx(l.LockOutlined,{}):e.jsxRuntimeExports.jsx(l.CheckCircleOutlined,{}),onClick:()=>k(m)})})}),e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:delete",children:e.jsxRuntimeExports.jsx(t.Tooltip,{title:i("serviceAccount.delete",{defaultValue:"Delete"}),children:e.jsxRuntimeExports.jsx(t.Popconfirm,{title:i("serviceAccount.deleteConfirm",{defaultValue:"Are you sure you want to delete this service account?"}),onConfirm:()=>f(m.id),okText:s("confirm",{defaultValue:"Confirm"}),cancelText:s("cancel",{defaultValue:"Cancel"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",size:"small",danger:!0,icon:e.jsxRuntimeExports.jsx(l.DeleteOutlined,{})})})})})]})}];return e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsx(t.Card,{style:{marginBottom:16},children:e.jsxRuntimeExports.jsx(t.Form,{form:b,layout:"horizontal",onFinish:C,initialValues:{search:V.search},style:{marginBottom:0},children:e.jsxRuntimeExports.jsxs(t.Row,{gutter:16,children:[e.jsxRuntimeExports.jsx(t.Col,{xs:24,sm:12,md:8,lg:6,children:e.jsxRuntimeExports.jsx(t.Form.Item,{name:"search",label:s("keyword",{defaultValue:"Keyword"}),children:e.jsxRuntimeExports.jsx(t.Input,{placeholder:i("serviceAccount.searchPlaceholder",{defaultValue:"Search by name or description"}),allowClear:!0,prefix:e.jsxRuntimeExports.jsx(l.SearchOutlined,{})})})}),e.jsxRuntimeExports.jsx(t.Col,{xs:24,sm:12,md:8,lg:6,style:{display:"flex",alignItems:"flex-end"},children:e.jsxRuntimeExports.jsx(t.Form.Item,{children:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(t.Button,{type:"primary",htmlType:"submit",icon:e.jsxRuntimeExports.jsx(l.FilterOutlined,{}),children:s("filter",{defaultValue:"Filter"})}),e.jsxRuntimeExports.jsx(t.Button,{onClick:T,icon:e.jsxRuntimeExports.jsx(l.ReloadOutlined,{}),children:s("reset",{defaultValue:"Reset"})})]})})})]})})}),e.jsxRuntimeExports.jsxs(t.Card,{children:[e.jsxRuntimeExports.jsx("div",{style:{marginBottom:16},children:e.jsxRuntimeExports.jsxs(t.Row,{justify:"space-between",align:"middle",children:[e.jsxRuntimeExports.jsx(t.Col,{children:e.jsxRuntimeExports.jsx(t.Button,{type:"primary",onClick:T,icon:e.jsxRuntimeExports.jsx(l.ReloadOutlined,{}),children:s("refresh",{defaultValue:"Refresh"})})}),e.jsxRuntimeExports.jsx(t.Col,{children:e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:create",children:e.jsxRuntimeExports.jsx(t.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(l.PlusOutlined,{}),onClick:I,children:i("serviceAccount.create",{defaultValue:"Create Service Account"})})})})]})}),e.jsxRuntimeExports.jsx(t.Table,{rowKey:"id",dataSource:h,columns:a,loading:o,pagination:{current:V.current,pageSize:V.page_size,total:A,onChange:D,showSizeChanger:!0,showQuickJumper:!0,showTotal:c=>s("totalItems",{defaultValue:`Total ${c} items`,total:c})}})]}),e.jsxRuntimeExports.jsx(G,{serviceAccountID:g,onClose:O,open:R,onSuccess:()=>{p()}})]})},Z=Object.freeze(Object.defineProperty({__proto__:null,default:Q},Symbol.toStringTag,{value:"Module"})),{Text:B,Paragraph:L}=t.Typography,{TextArea:X}=t.Input,Y=({serviceAccountID:i})=>{const{t:s}=F.useTranslation("authorization"),{t:E}=F.useTranslation("common"),[b,u]=x.useState([]),[o,d]=x.useState(!1),[h,j]=x.useState(!1),[A]=t.Form.useForm(),[r,R]=x.useState(null),[y,g]=x.useState(null),[S,V]=x.useState(!1),n=async()=>{if(i){d(!0);try{const a=await v.api.authorization.getServiceAccountAccessKeys({id:i});u(a)}catch(a){console.error("Failed to load access keys:",a),t.message.error(s("serviceAccount.loadKeysError",{defaultValue:"Failed to load access keys."}))}finally{d(!1)}}};x.useEffect(()=>{n()},[i]);const p=a=>{navigator.clipboard.writeText(a).then(()=>{t.message.success(s("serviceAccount.copyKeySuccess",{defaultValue:"Copied to clipboard!"}))},c=>{console.error("Could not copy text: ",c)})},C=()=>{R(null),A.resetFields(),j(!0)},T=a=>{R(a),A.setFieldsValue({name:a.name,description:a.description,status:a.status==="active",expires_at:a.expires_at?J(a.expires_at):void 0}),j(!0)},D=()=>{j(!1),A.resetFields()},{run:I,loading:K}=P.useRequest(async()=>{const a=await A.validateFields();if(r){const c=await v.api.authorization.updateServiceAccountAccessKey({id:i,keyId:r.id},{name:a.name,description:a.description,status:a.status?"active":"disabled",expires_at:a.expires_at?a.expires_at.toISOString():void 0});return j(!1),c}else{const c=await v.api.authorization.createServiceAccountAccessKey({id:i},{name:a.name,description:a.description,expires_at:a.expires_at?a.expires_at.toISOString():void 0});g(c),j(!1),V(!0)}},{manual:!0,onSuccess:()=>{t.message.success(s("serviceAccount.updateKeySuccess",{defaultValue:"Access key updated successfully."})),n()},onError:()=>{t.message.error(s("serviceAccount.updateKeyError",{defaultValue:"Failed to update access key."}))}}),O=async a=>{try{await v.api.authorization.deleteServiceAccountAccessKey({id:i,keyId:a}),t.message.success(s("serviceAccount.deleteKeySuccess",{defaultValue:"Access key deleted successfully."})),n()}catch(c){console.error("Failed to delete key:",c),t.message.error(s("serviceAccount.deleteKeyError",{defaultValue:"Failed to delete access key."}))}},f=()=>{V(!1),g(null)},k=[{title:s("serviceAccount.keyName",{defaultValue:"Name"}),dataIndex:"name",key:"name"},{title:s("serviceAccount.accessKey",{defaultValue:"Access Key ID"}),dataIndex:"access_key_id",key:"access_key_id",render:a=>e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(l.KeyOutlined,{}),e.jsxRuntimeExports.jsx(B,{copyable:!0,children:a})]})},{title:s("serviceAccount.keyDescription",{defaultValue:"Description"}),dataIndex:"description",key:"description"},{title:s("serviceAccount.keyStatus",{defaultValue:"Status"}),dataIndex:"status",key:"status",render:a=>a==="active"?e.jsxRuntimeExports.jsx(t.Badge,{status:"success",text:s("serviceAccount.keyActive",{defaultValue:"Active"})}):e.jsxRuntimeExports.jsx(t.Badge,{status:"error",text:s("serviceAccount.keyDisabled",{defaultValue:"Disabled"})})},{title:s("serviceAccount.keyExpires",{defaultValue:"Expires At"}),dataIndex:"expires_at",key:"expires_at",render:a=>a?_.formatDate(a):e.jsxRuntimeExports.jsx(B,{type:"secondary",children:s("serviceAccount.neverExpires",{defaultValue:"Never"})})},{title:s("serviceAccount.keyLastUsed",{defaultValue:"Last Used"}),dataIndex:"last_used",key:"last_used",render:a=>a?_.formatDate(a):e.jsxRuntimeExports.jsx(B,{type:"secondary",children:s("serviceAccount.keyNeverUsed",{defaultValue:"Never"})})},{title:E("actions",{defaultValue:"Actions"}),key:"action",render:(a,c)=>e.jsxRuntimeExports.jsxs(t.Space,{size:"small",children:[e.jsxRuntimeExports.jsx(t.Tooltip,{title:s("serviceAccount.updateKey",{defaultValue:"Update Key"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",icon:e.jsxRuntimeExports.jsx(l.EditOutlined,{}),onClick:()=>T(c)})}),e.jsxRuntimeExports.jsx(t.Popconfirm,{title:s("serviceAccount.deleteKeyConfirm",{defaultValue:"Are you sure you want to delete this access key?"}),onConfirm:()=>O(c.id),okText:E("confirm",{defaultValue:"Confirm"}),cancelText:E("cancel",{defaultValue:"Cancel"}),children:e.jsxRuntimeExports.jsx(t.Button,{type:"text",danger:!0,icon:e.jsxRuntimeExports.jsx(l.DeleteOutlined,{})})})]})}];return e.jsxRuntimeExports.jsxs(e.jsxRuntimeExports.Fragment,{children:[e.jsxRuntimeExports.jsx(t.Card,{title:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(l.KeyOutlined,{}),s("serviceAccount.accessKeys",{defaultValue:"Access Keys"})]}),extra:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(t.Button,{icon:e.jsxRuntimeExports.jsx(l.SyncOutlined,{}),onClick:n,loading:o,children:E("refresh",{defaultValue:"Refresh"})}),e.jsxRuntimeExports.jsx(t.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(l.PlusOutlined,{}),onClick:C,children:s("serviceAccount.createAccessKey",{defaultValue:"Create Access Key"})})]}),children:e.jsxRuntimeExports.jsx(t.Table,{columns:k,dataSource:b,rowKey:"id",loading:o,pagination:!1})}),e.jsxRuntimeExports.jsx(t.Modal,{title:r?s("serviceAccount.updateKey",{defaultValue:"Update Access Key"}):s("serviceAccount.createAccessKey",{defaultValue:"Create Access Key"}),open:h,onOk:I,confirmLoading:K,onCancel:D,children:e.jsxRuntimeExports.jsxs(t.Form,{form:A,layout:"vertical",children:[e.jsxRuntimeExports.jsx(t.Form.Item,{name:"name",label:s("serviceAccount.keyName",{defaultValue:"Key Name"}),rules:[{required:!0,message:s("serviceAccount.keyNameRequired",{defaultValue:"Please enter a name for the access key."})}],children:e.jsxRuntimeExports.jsx(t.Input,{placeholder:s("serviceAccount.keyNamePlaceholder",{defaultValue:"Enter key name"})})}),e.jsxRuntimeExports.jsx(t.Form.Item,{name:"description",label:s("serviceAccount.keyDescription",{defaultValue:"Description"}),children:e.jsxRuntimeExports.jsx(X,{rows:3,placeholder:s("serviceAccount.keyDescriptionPlaceholder",{defaultValue:"Enter key description (optional)"})})}),r&&e.jsxRuntimeExports.jsx(t.Form.Item,{name:"status",label:s("serviceAccount.keyStatus",{defaultValue:"Status"}),valuePropName:"checked",children:e.jsxRuntimeExports.jsx(t.Switch,{checkedChildren:s("serviceAccount.keyActive",{defaultValue:"Active"}),unCheckedChildren:s("serviceAccount.keyDisabled",{defaultValue:"Disabled"})})}),e.jsxRuntimeExports.jsx(t.Form.Item,{name:"expires_at",label:s("serviceAccount.keyExpires",{defaultValue:"Expires At"}),children:e.jsxRuntimeExports.jsx(t.DatePicker,{showTime:!0,placeholder:s("serviceAccount.selectExpireDate",{defaultValue:"Select expiry date (optional)"}),style:{width:"100%"}})})]})}),e.jsxRuntimeExports.jsxs(t.Modal,{title:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(l.ExclamationCircleOutlined,{style:{color:"#faad14"}}),s("serviceAccount.secretNoticeTitle",{defaultValue:"Access Key Created - Important!"})]}),open:S,footer:[e.jsxRuntimeExports.jsx(t.Button,{onClick:f,children:E("confirm",{defaultValue:"I have copied the secret key. Close"})},"close")],closable:!1,children:[e.jsxRuntimeExports.jsx(t.Alert,{message:s("serviceAccount.secretNoticeMessage",{defaultValue:"Your new Secret Access Key is displayed below. This is the only time you will be able to see this secret. Please copy it and store it securely."}),type:"warning",showIcon:!0,style:{marginBottom:16}}),y&&e.jsxRuntimeExports.jsxs(e.jsxRuntimeExports.Fragment,{children:[e.jsxRuntimeExports.jsxs("div",{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsxs(B,{strong:!0,children:[s("serviceAccount.accessKey",{defaultValue:"Access Key ID"}),":"]}),e.jsxRuntimeExports.jsx(L,{copyable:{text:y.access_key_id},children:y.access_key_id})]}),e.jsxRuntimeExports.jsxs("div",{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsxs(B,{strong:!0,children:[s("serviceAccount.secretKey",{defaultValue:"Secret Access Key"}),":"]}),e.jsxRuntimeExports.jsx(L,{copyable:{text:y.secret_access_key||""},children:y.secret_access_key})]}),e.jsxRuntimeExports.jsx(t.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(l.CopyOutlined,{}),onClick:()=>{const a=`Access Key: ${y.access_key_id}
Secret Key: ${y.secret_access_key}`;p(a)},block:!0,children:s("serviceAccount.copyToClipboard",{defaultValue:"Copy Keys to Clipboard"})})]})]})]})},{Text:M}=t.Typography,ee=({serviceAccount:i,onRefresh:s,loading:E})=>{const{id:b}=i||{},{t:u}=F.useTranslation("authorization"),{t:o}=F.useTranslation("common"),[d,h]=x.useState([]),[j,A]=x.useState([]);x.useEffect(()=>{A((i==null?void 0:i.roles)||[])},[i]);const[r,R]=x.useState(void 0),{loading:y}=P.useRequest(async()=>v.api.authorization.listRoles({current:1,page_size:20,search:r}),{onSuccess:n=>{const p=n.data;j.forEach(C=>{p.find(D=>D.id===C.id)||p.push(C)}),h(p)},onError:n=>{console.error("Failed to load roles:",n),t.message.error(u("serviceAccount.loadRolesError",{defaultValue:"Failed to load roles."}))},debounceWait:300,refreshDeps:[r]}),{run:g,loading:S}=P.useRequest(async()=>{if(b)return v.api.authorization.assignServiceAccountRoles({id:b},{role_ids:j.map(n=>n.id)})},{onSuccess:()=>{t.message.success(u("serviceAccount.assignRolesSuccess",{defaultValue:"Roles assigned successfully."})),s()},onError:n=>{console.error("Failed to assign roles:",n),t.message.error(u("serviceAccount.assignRolesError",{defaultValue:"Failed to assign roles."}))},manual:!0}),V=n=>{A(n.map(p=>d.find(C=>C.id===p)||{id:p,name:p,description:p}))};return e.jsxRuntimeExports.jsx(t.Card,{title:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(l.LockOutlined,{}),u("serviceAccount.authorization",{defaultValue:"Authorization"})]}),extra:e.jsxRuntimeExports.jsx(t.Button,{icon:e.jsxRuntimeExports.jsx(l.SyncOutlined,{}),onClick:()=>{s()},disabled:E||S,loading:S,children:o("refresh",{defaultValue:"Refresh"})}),children:S?e.jsxRuntimeExports.jsx(t.Skeleton,{active:!0,paragraph:{rows:4}}):e.jsxRuntimeExports.jsxs(e.jsxRuntimeExports.Fragment,{children:[e.jsxRuntimeExports.jsxs("div",{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsx(M,{children:u("serviceAccount.roles",{defaultValue:"Roles"})}),e.jsxRuntimeExports.jsx("div",{style:{marginTop:8},children:j.length>0?d.filter(n=>j.some(p=>p.id===n.id)).map(n=>e.jsxRuntimeExports.jsx(t.Tag,{color:"blue",children:n.name},n.id)):e.jsxRuntimeExports.jsx(t.Empty,{image:t.Empty.PRESENTED_IMAGE_SIMPLE,description:u("serviceAccount.noRoles",{defaultValue:"No roles assigned."}),style:{margin:"10px 0"}})})]}),e.jsxRuntimeExports.jsxs("div",{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsx(M,{children:u("serviceAccount.assignRoles",{defaultValue:"Assign Roles"})}),e.jsxRuntimeExports.jsx(t.Select,{mode:"multiple",style:{width:"100%",marginTop:8},placeholder:u("serviceAccount.selectRoles",{defaultValue:"Select roles to assign"}),value:j.map(n=>n.id),onSearch:n=>{R(n)},onDropdownVisibleChange:n=>{n&&R(void 0)},onChange:V,loading:E||y,optionFilterProp:"label",options:d.map(n=>({label:n.name,value:n.id,title:n.description}))})]}),e.jsxRuntimeExports.jsx("div",{style:{marginTop:16},children:e.jsxRuntimeExports.jsx(t.Button,{type:"primary",onClick:g,loading:S,disabled:E,children:u("serviceAccount.assignRoles",{defaultValue:"Assign Roles"})})})]})})},{TabPane:q}=t.Tabs,te={allow_all:{Statement:[{Effect:"Allow",Action:["*"]}]},deny_all:{Statement:[{Effect:"Deny",Action:["*"]}]},allow_with_action:{Statement:[{Effect:"Allow",Action:["authorization:user:view"]}]},allow_with_condition:{Statement:[{Effect:"Allow",Action:["authorization:user:update"],Condition:{StringEquals:{"id:":"abcdef"}}},{Effect:"Deny",Action:["*"]}]},allow_with_uri:{Statement:[{Effect:"Allow",Action:["authorization:user:view"],Condition:{StringEquals:{"http.uri":"/api/users/abcdef","http.method":"GET"}}},{Effect:"Deny",Action:["*"]}]}},se=H.createStyles(({css:i})=>({rolePolicy:i`
       .ant-collapse-content>.ant-collapse-content-box{
        padding: 2px;
      }
      .ant-form-item-additional>#policy_document_extra{
        min-height: 0;
      }
    `,rolePermissionExtra:i`
      float: right;
      z-index: 1001;
      position: sticky;
    `,rolePolicyExtra:i`
      position: absolute;
      right: 20px;
      top: 5px;
    `})),ie=()=>{const{styles:i}=se(),u=N.useLocation().hash.replace("#","")||"basic",{t:o}=F.useTranslation("authorization"),{t:d}=F.useTranslation("common"),{id:h}=N.useParams(),j=N.useNavigate(),{hasPermission:A}=W.usePermission(),[r,R]=x.useState(null),[y,g]=x.useState(!1),[S]=t.Form.useForm(),[V,n]=x.useState(!1);if(!h)return e.jsxRuntimeExports.jsx($.default,{});const{run:p,loading:C}=P.useRequest(async()=>{if(h)return v.api.authorization.getServiceAccountById({id:h})},{onSuccess:f=>{R(f||null)}});x.useEffect(()=>{p()},[h]);const T=f=>{j(`#${f}`)},D=async()=>{if(h)try{await v.api.authorization.deleteServiceAccount({id:h}),t.message.success(o("serviceAccount.deleteSuccess",{defaultValue:"Service account deleted successfully."})),j("/authorization/service-accounts")}catch(f){console.error(o("serviceAccount.deleteError",{defaultValue:"Failed to delete service account."}),f),t.message.error(o("serviceAccount.deleteError",{defaultValue:"Failed to delete service account."}))}},{run:I,loading:K}=P.useRequest(async()=>{if(r)return v.api.authorization.updateServiceAccountStatus({id:h},{status:r.status==="active"?"disabled":"active"})},{onSuccess:f=>{R(f||null),t.message.success(o("serviceAccount.statusUpdateSuccess",{defaultValue:"Service account status updated successfully."}))},onError:f=>{console.error(o("serviceAccount.statusUpdateError",{defaultValue:"Failed to update service account status."}),f),t.message.error(o("serviceAccount.statusUpdateError",{defaultValue:"Failed to update service account status."}))},manual:!0}),O=async f=>{if(h)try{let k;try{k=JSON.parse(f.policy_document)}catch{t.message.error(o("serviceAccount.policyInvalidJson",{defaultValue:"Invalid JSON format for policy document."}));return}await v.api.authorization.setServiceAccountPolicy({id:h},{policy_document:k}),t.message.success(o("serviceAccount.policyUpdateSuccess",{defaultValue:"Policy document updated successfully."})),g(!1),p()}catch(k){console.error(o("serviceAccount.policyUpdateError",{defaultValue:"Failed to update policy document."}),k),t.message.error(o("serviceAccount.policyUpdateError",{defaultValue:"Failed to update policy document."}))}};return C?e.jsxRuntimeExports.jsx(t.Spin,{size:"large",style:{display:"flex",justifyContent:"center",padding:"50px"}}):r?e.jsxRuntimeExports.jsxs(t.Card,{title:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(l.UserOutlined,{}),r.name,r.status==="active"?e.jsxRuntimeExports.jsx(t.Badge,{status:"success",text:o("serviceAccount.status.active",{defaultValue:"Active"})}):e.jsxRuntimeExports.jsx(t.Badge,{status:"error",text:o("serviceAccount.status.disabled",{defaultValue:"Disabled"})})]}),extra:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:update",children:e.jsxRuntimeExports.jsx(t.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(l.EditOutlined,{}),onClick:()=>n(!0),disabled:V,children:d("edit",{defaultValue:"Edit"})})}),e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:update",children:e.jsxRuntimeExports.jsx(t.Button,{icon:r.status==="active"?e.jsxRuntimeExports.jsx(l.LockOutlined,{}):e.jsxRuntimeExports.jsx(l.CheckCircleOutlined,{}),onClick:I,loading:K,children:r.status==="active"?d("disable",{defaultValue:"Disable"}):d("enable",{defaultValue:"Enable"})})}),e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:delete",children:e.jsxRuntimeExports.jsx(t.Popconfirm,{title:o("serviceAccount.deleteConfirm",{defaultValue:"Are you sure you want to delete this service account?"}),onConfirm:D,okText:d("confirm",{defaultValue:"Confirm"}),cancelText:d("cancel",{defaultValue:"Cancel"}),children:e.jsxRuntimeExports.jsx(t.Button,{danger:!0,icon:e.jsxRuntimeExports.jsx(l.DeleteOutlined,{}),children:d("delete",{defaultValue:"Delete"})})})}),e.jsxRuntimeExports.jsx(t.Button,{icon:e.jsxRuntimeExports.jsx(l.RollbackOutlined,{}),onClick:()=>j("/authorization/service-accounts"),children:d("back",{defaultValue:"Back"})})]}),children:[e.jsxRuntimeExports.jsxs(t.Tabs,{defaultActiveKey:u,onChange:T,children:[e.jsxRuntimeExports.jsx(q,{tab:o("serviceAccount.tabs.basic",{defaultValue:"Basic Information"}),children:e.jsxRuntimeExports.jsxs(t.Descriptions,{bordered:!0,column:2,children:[e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.name",{defaultValue:"Name"}),span:2,children:r.name}),e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.description",{defaultValue:"Description"}),span:2,children:r.description||o("serviceAccount.noDescription",{defaultValue:"N/A"})}),e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.status",{defaultValue:"Status"}),children:r.status==="active"?e.jsxRuntimeExports.jsx(t.Badge,{status:"success",text:o("serviceAccount.statusActive",{defaultValue:"Active"})}):e.jsxRuntimeExports.jsx(t.Badge,{status:"error",text:o("serviceAccount.statusDisabled",{defaultValue:"Disabled"})})}),e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.lastAccess",{defaultValue:"Last Access"}),children:r.last_access?_.formatDate(r.last_access):o("serviceAccount.neverAccessed",{defaultValue:"Never"})}),e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.createdAt",{defaultValue:"Created At"}),children:_.formatDate(r.created_at)}),e.jsxRuntimeExports.jsx(t.Descriptions.Item,{label:o("serviceAccount.updatedAt",{defaultValue:"Updated At"}),children:_.formatDate(r.updated_at)})]})},"basic"),e.jsxRuntimeExports.jsx(q,{tab:e.jsxRuntimeExports.jsxs("span",{children:[e.jsxRuntimeExports.jsx(l.KeyOutlined,{}),o("serviceAccount.accessKeys",{defaultValue:"Access Keys"})]}),disabled:!A("authorization:service_account:access_key:list"),children:e.jsxRuntimeExports.jsx(Y,{serviceAccountID:h})},"access-keys"),e.jsxRuntimeExports.jsx(q,{tab:e.jsxRuntimeExports.jsxs("span",{children:[e.jsxRuntimeExports.jsx(l.LockOutlined,{}),o("serviceAccount.authorization",{defaultValue:"Authorization"})]}),disabled:!A("authorization:service_account:role:list"),children:e.jsxRuntimeExports.jsx(ee,{serviceAccount:r,onRefresh:p})},"authorization"),e.jsxRuntimeExports.jsxs(q,{tab:o("serviceAccount.tabs.policy",{defaultValue:"Policy Document"}),children:[e.jsxRuntimeExports.jsx("div",{style:{marginBottom:16},children:e.jsxRuntimeExports.jsx(t.Row,{justify:"end",children:e.jsxRuntimeExports.jsx(t.Col,{children:e.jsxRuntimeExports.jsx(w.PermissionGuard,{permission:"authorization:service_account:update",children:e.jsxRuntimeExports.jsx(t.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(l.EditOutlined,{}),onClick:()=>{g(!0),S.setFieldsValue({policy_document:JSON.stringify(r.policy_document,null,2)})},children:o("serviceAccount.editPolicy",{defaultValue:"Edit Policy"})})})})})}),e.jsxRuntimeExports.jsx(t.Spin,{spinning:C,children:r.policy_document&&r.policy_document.Statement&&r.policy_document.Statement.length>0?e.jsxRuntimeExports.jsx(t.Card,{children:e.jsxRuntimeExports.jsx("pre",{style:{whiteSpace:"pre-wrap",overflowX:"auto"},children:JSON.stringify(r.policy_document,null,2)})}):e.jsxRuntimeExports.jsx(t.Empty,{description:o("serviceAccount.noPolicy",{defaultValue:"No policy document defined for this service account."})})})]},"policy")]}),e.jsxRuntimeExports.jsx(t.Modal,{title:o("serviceAccount.editPolicy",{defaultValue:"Edit Policy"}),open:y,onCancel:()=>{g(!1),S.resetFields()},footer:null,width:700,children:e.jsxRuntimeExports.jsxs(t.Form,{form:S,layout:"vertical",onFinish:O,children:[e.jsxRuntimeExports.jsx(t.Form.Item,{name:"policy_document",extra:e.jsxRuntimeExports.jsx("span",{className:i.rolePolicyExtra,children:e.jsxRuntimeExports.jsx(t.Select,{style:{width:120},placeholder:o("serviceAccount.insertTemplate",{defaultValue:"Insert Template"}),value:o("serviceAccount.insertTemplate",{defaultValue:"Insert Template"}),options:[{label:o("serviceAccount.allowAll",{defaultValue:"Allow All"}),value:"allow_all"},{label:o("serviceAccount.denyAll",{defaultValue:"Deny All"}),value:"deny_all"},{label:o("serviceAccount.allowWithAction",{defaultValue:"Allow with Action"}),value:"allow_with_action"},{label:o("serviceAccount.denyWithCondition",{defaultValue:"Allow with Condition"}),value:"allow_with_condition"},{label:o("serviceAccount.allowWithUri",{defaultValue:"Allow with URI"}),value:"allow_with_uri"}],onChange:f=>{const k=te[f];k&&S.setFieldValue("policy_document",JSON.stringify(k,null,2))}})}),children:e.jsxRuntimeExports.jsx(e.TextArea,{rows:15,style:{fontFamily:"monospace"},placeholder:`{
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "account:EnableRegion",
                "account:DisableRegion"
            ],
            "Condition": {
                "StringEquals": {"id:": "abcdef"}
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "*"
            ]
        }
    ]
}`})}),e.jsxRuntimeExports.jsx(t.Form.Item,{children:e.jsxRuntimeExports.jsxs(t.Space,{children:[e.jsxRuntimeExports.jsx(t.Button,{type:"primary",htmlType:"submit",children:d("save",{defaultValue:"Save"})}),e.jsxRuntimeExports.jsx(t.Button,{onClick:()=>g(!1),children:d("cancel",{defaultValue:"Cancel"})})]})})]})}),e.jsxRuntimeExports.jsx(G,{serviceAccountID:h,onClose:()=>n(!1),open:V})]}):e.jsxRuntimeExports.jsx("div",{style:{textAlign:"center",padding:"50px 0"},children:e.jsxRuntimeExports.jsx(t.Empty,{description:o("serviceAccount.notFound",{defaultValue:"Service account not found."})})})},ce=Object.freeze(Object.defineProperty({__proto__:null,default:ie},Symbol.toStringTag,{value:"Module"}));exports.ServiceAccountDetail=ce;exports.ServiceAccountList=Z;

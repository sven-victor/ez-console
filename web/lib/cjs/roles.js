"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("./vendor.js"),n=require("react"),l=require("antd"),a=require("@ant-design/icons"),h=require("./components.js"),p=require("./index.js"),S=require("react-i18next"),_=require("lodash"),W=require("antd-style"),{TextArea:C}=l.Input,G=W.createStyles(({css:u})=>({rolePolicy:u`
       .ant-collapse-content>.ant-collapse-content-box{
        padding: 2px;
      }
      .ant-form-item-additional>#policy_document_extra{
        min-height: 0;
      }
      .ant-tree .ant-tree-node-content-wrapper{
        flex: none;
      }
    `,rolePermissionExtra:u`
      float: right;
      z-index: 1001;
      position: sticky;
    `,rolePolicyExtra:u`
      position: absolute;
      right: 5px;
      top: 5px;
    `})),U=()=>{const{styles:u}=G(),{t:o}=S.useTranslation("authorization"),{t:c}=S.useTranslation("common"),[d]=l.Form.useForm(),[b,V]=n.useState(!1),[v,x]=n.useState(!1),[E,g]=n.useState(null),[m,f]=n.useState([]),j=n.useRef(null),[A,k]=n.useState([]),[O,R]=n.useState([]),[T,y]=n.useState(!0),q=t=>{R(t),y(!1)},F=()=>{const t=A.map(s=>s.key);R(t),y(!0)},z=()=>{R([]),y(!1)},D=()=>{g(null),f([]),d.resetFields(),x(!0)},I=t=>{var s,r;g(t),f(((s=t.permissions)==null?void 0:s.map(i=>i.id))||[]),d.setFieldsValue({name:t.name,description:t.description,permissions:((r=t.permissions)==null?void 0:r.map(i=>i.id))||[],policy_document:JSON.stringify(t.policy_document,null,2)}),x(!0)},N=async t=>{var s,r;try{await p.api.authorization.deleteRole({id:t}),l.message.success(o("role.deleteSuccess",{defaultValue:"Role deleted successfully."})),(r=(s=j.current)==null?void 0:s.reload)==null||r.call(s)}catch(i){l.message.error(o("role.deleteError",{defaultValue:"Failed to delete role: {{error}}",error:i}))}},B=(t,s)=>{if(!s)return m.length===0?Promise.reject(new Error(o("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve();try{return JSON.parse(s),Promise.resolve()}catch{return Promise.reject(new Error(o("role.invalidJsonFormat",{defaultValue:"Invalid JSON format."})))}},J=async t=>{var s,r;try{t.policy_document=JSON.parse(t.policy_document??{}),V(!0),E?(await p.api.authorization.updateRole({id:E.id},{...t,permissions:m.filter(i=>!i.startsWith("[group]-"))}),l.message.success(o("role.updateSuccess",{defaultValue:"Role updated successfully."}))):(await p.api.authorization.createRole({...t,permissions:m.filter(i=>!i.startsWith("[group]-"))}),l.message.success(o("role.createSuccess",{defaultValue:"Role created successfully."}))),x(!1),(r=(s=j.current)==null?void 0:s.reload)==null||r.call(s)}catch(i){console.error(o("role.saveError",{defaultValue:"Failed to save role."}),i),l.message.error(o("role.saveError",{defaultValue:"Failed to save role."}))}finally{V(!1)}},L=[{title:o("role.name",{defaultValue:"Role Name"}),dataIndex:"name",key:"name",render:t=>e.jsxRuntimeExports.jsxs(l.Space,{children:[e.jsxRuntimeExports.jsx(a.UserOutlined,{}),t]})},{title:o("role.description",{defaultValue:"Description"}),dataIndex:"description",key:"description"},{title:o("role.permissionCount",{defaultValue:"Permissions"}),key:"permission_count",render:(t,s)=>{var r;return e.jsxRuntimeExports.jsxs(l.Tag,{color:"blue",children:[e.jsxRuntimeExports.jsx(a.LockOutlined,{})," ",((r=s.permissions)==null?void 0:r.length)||0]})}},{title:o("role.createdAt",{defaultValue:"Created At"}),dataIndex:"created_at",key:"created_at",render:t=>new Date(t).toLocaleString()},{title:c("actions",{defaultValue:"Actions"}),key:"action",render:(t,s)=>e.jsxRuntimeExports.jsxs(l.Space,{size:"small",children:[e.jsxRuntimeExports.jsx(h.PermissionGuard,{permission:"authorization:role:update",children:e.jsxRuntimeExports.jsx(l.Tooltip,{title:o("role.edit",{defaultValue:"Edit Role"}),children:e.jsxRuntimeExports.jsx(l.Button,{type:"text",size:"small",icon:e.jsxRuntimeExports.jsx(a.EditOutlined,{}),onClick:()=>I(s)})})}),e.jsxRuntimeExports.jsx(h.PermissionGuard,{permission:"authorization:role:delete",children:e.jsxRuntimeExports.jsx(l.Tooltip,{title:o("role.delete",{defaultValue:"Delete Role"}),children:e.jsxRuntimeExports.jsx(l.Popconfirm,{title:o("role.deleteConfirm",{defaultValue:"Are you sure you want to delete this role?"}),onConfirm:()=>N(s.id),okText:c("confirm",{defaultValue:"Confirm"}),cancelText:c("cancel",{defaultValue:"Cancel"}),children:e.jsxRuntimeExports.jsx(l.Button,{type:"text",size:"small",danger:!0,icon:e.jsxRuntimeExports.jsx(a.DeleteOutlined,{})})})})})]})}],M={allow_all:{policy:{Statement:[{Effect:"Allow",Action:["*"]}]}},deny_all:{Statement:[{Effect:"Deny",Action:["*"]}]},allow_with_action:{Statement:[{Effect:"Allow",Action:["authorization:user:view"]}]},allow_with_condition:{Statement:[{Effect:"Allow",Action:["authorization:user:update"],Condition:{StringEquals:{"id:":"abcdef"}}},{Effect:"Deny",Action:["*"]}]},allow_with_uri:{Statement:[{Effect:"Allow",Action:["authorization:user:view"],Condition:{StringEquals:{"http.uri":"/api/users/abcdef","http.method":"GET"}}},{Effect:"Deny",Action:["*"]}]}},P=async()=>{p.api.authorization.listPermissions().then(t=>{k(t.map((s,r)=>{var i;return{key:`[group]-${r}`,title:s.name,code:s.name.replace(/ /g,"_"),children:(i=s.permissions)==null?void 0:i.map(w=>({key:w.id,code:w.code.replace(/:/g,"."),title:w.name}))}}))})};return n.useEffect(()=>{P()},[]),e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsxs(l.Card,{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsx("div",{style:{marginBottom:16},children:e.jsxRuntimeExports.jsxs(l.Row,{justify:"space-between",align:"middle",children:[e.jsxRuntimeExports.jsx(l.Col,{children:e.jsxRuntimeExports.jsx(l.Button,{type:"primary",onClick:()=>{var t,s;(s=(t=j.current)==null?void 0:t.reload)==null||s.call(t),P()},icon:e.jsxRuntimeExports.jsx(a.ReloadOutlined,{}),children:c("refresh",{defaultValue:"Refresh"})})}),e.jsxRuntimeExports.jsx(l.Col,{children:e.jsxRuntimeExports.jsx(h.PermissionGuard,{permission:"authorization:role:create",children:e.jsxRuntimeExports.jsx(l.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(a.PlusOutlined,{}),onClick:D,children:o("role.create",{defaultValue:"Create Role"})})})})]})}),e.jsxRuntimeExports.jsx(h.Table,{request:async({page_size:t,current:s})=>p.api.authorization.listRoles({current:s,page_size:t}),columns:L,actionRef:j})]}),e.jsxRuntimeExports.jsx(l.Modal,{title:E?o("role.editTitle",{defaultValue:"Edit Role"}):o("role.createTitle",{defaultValue:"Create Role"}),open:v,onOk:d.submit,onCancel:()=>x(!1),confirmLoading:b,children:e.jsxRuntimeExports.jsxs(l.Form,{form:d,layout:"vertical",onFinish:J,children:[e.jsxRuntimeExports.jsx(l.Form.Item,{label:o("role.name",{defaultValue:"Role Name"}),name:"name",rules:[{required:!0,message:o("role.nameRequired",{defaultValue:"Please enter the role name."})}],children:e.jsxRuntimeExports.jsx(l.Input,{placeholder:o("role.namePlaceholder",{defaultValue:"Enter role name"})})}),e.jsxRuntimeExports.jsx(l.Form.Item,{label:o("role.description",{defaultValue:"Description"}),name:"description",children:e.jsxRuntimeExports.jsx(C,{rows:4,placeholder:o("role.descriptionPlaceholder",{defaultValue:"Enter role description"})})}),e.jsxRuntimeExports.jsxs(l.Collapse,{accordion:!0,bordered:!1,className:u.rolePolicy,children:[e.jsxRuntimeExports.jsx(l.Collapse.Panel,{forceRender:!0,header:o("role.permissions",{defaultValue:"Permissions"}),style:{padding:0},children:e.jsxRuntimeExports.jsx(l.Form.Item,{name:"permissions",rules:[{validator(){return m.length===0&&!d.getFieldValue("policy_document")?Promise.reject(new Error(o("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve()}}],children:e.jsxRuntimeExports.jsx("div",{children:e.jsxRuntimeExports.jsxs("div",{style:{maxHeight:"400px",overflowY:"auto",border:"1px solid #d9d9d9",borderRadius:"4px"},children:[e.jsxRuntimeExports.jsxs("span",{className:u.rolePermissionExtra,children:[e.jsxRuntimeExports.jsx(l.Button,{type:"link",onClick:F,icon:e.jsxRuntimeExports.jsx(a.DownOutlined,{}),children:c("expandAll",{defaultValue:"Expand All"})}),e.jsxRuntimeExports.jsx(l.Button,{type:"link",onClick:z,icon:e.jsxRuntimeExports.jsx(a.UpOutlined,{}),children:c("collapseAll",{defaultValue:"Collapse All"})})]}),e.jsxRuntimeExports.jsx(l.Tree,{treeData:A,titleRender:t=>e.jsxRuntimeExports.jsx("span",{children:o(`permission.title.${t.code}`,{defaultValue:t.title})}),checkable:!0,expandedKeys:O,autoExpandParent:T,onExpand:q,checkedKeys:m,onCheck:t=>{_.isArray(t)?f(t):_.has(t,"checked")&&f(t.checked)}})]})})})},"permissions"),e.jsxRuntimeExports.jsx(l.Collapse.Panel,{forceRender:!0,header:o("role.policyDocument",{defaultValue:"Policy Document (JSON)"}),children:e.jsxRuntimeExports.jsx(l.Form.Item,{name:"policy_document",rules:[{validator:B}],extra:e.jsxRuntimeExports.jsx("span",{className:u.rolePolicyExtra,children:e.jsxRuntimeExports.jsx(l.Select,{style:{width:120},placeholder:o("role.insertTemplate",{defaultValue:"Insert Template"}),value:o("role.insertTemplate",{defaultValue:"Insert Template"}),options:[{label:o("role.allowAll",{defaultValue:"Allow All"}),value:"allow_all"},{label:o("role.denyAll",{defaultValue:"Deny All"}),value:"deny_all"},{label:o("role.allowWithAction",{defaultValue:"Allow with Action"}),value:"allow_with_action"},{label:o("role.denyWithCondition",{defaultValue:"Allow with Condition"}),value:"allow_with_condition"},{label:o("role.allowWithUri",{defaultValue:"Allow with URI"}),value:"allow_with_uri"}],onChange:t=>{const s=M[t];s&&d.setFieldValue("policy_document",JSON.stringify(s,null,2))}})}),children:e.jsxRuntimeExports.jsx(C,{rows:15,style:{fontFamily:"monospace"},placeholder:`{
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "account:EnableRegion",
                "account:DisableRegion"
            ],
            "Condition": {
                "StringEquals": {"id:": "abcdef"}
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "*"
            ]
        }
    ]
}`})})},"policy_document")]})]})})]})};exports.default=U;

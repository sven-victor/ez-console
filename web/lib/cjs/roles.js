"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("./vendor.js"),r=require("react"),f=require("./components.js"),d=require("./index.js"),{TextArea:g}=e.Input,O=e.createStyles(({css:n})=>({rolePolicy:n`
       .ant-collapse-content>.ant-collapse-content-box{
        padding: 2px;
      }
      .ant-form-item-additional>#policy_document_extra{
        min-height: 0;
      }
      .ant-tree .ant-tree-node-content-wrapper{
        flex: none;
      }
    `,rolePermissionExtra:n`
      float: right;
      z-index: 1001;
      position: sticky;
    `,rolePolicyExtra:n`
      position: absolute;
      right: 5px;
      top: 5px;
    `})),$=()=>{const{styles:n}=O(),{t:o}=e.useTranslation("authorization"),{t:a}=e.useTranslation("common"),[u]=e.Form.useForm(),[P,y]=r.useState(!1),[S,m]=r.useState(!1),[h,w]=r.useState(null),[c,p]=r.useState([]),x=r.useRef(null),[V,_]=r.useState([]),[C,j]=r.useState([]),[b,R]=r.useState(!0),v=t=>{j(t),R(!1)},k=()=>{const t=V.map(l=>l.key);j(t),R(!0)},I=()=>{j([]),R(!1)},T=()=>{w(null),p([]),u.resetFields(),m(!0)},F=t=>{var l,s;w(t),p(((l=t.permissions)==null?void 0:l.map(i=>i.id))||[]),u.setFieldsValue({name:t.name,description:t.description,permissions:((s=t.permissions)==null?void 0:s.map(i=>i.id))||[],policy_document:JSON.stringify(t.policy_document,null,2)}),m(!0)},z=async t=>{var l,s;try{await d.api.authorization.deleteRole({id:t}),e.staticMethods.success(o("role.deleteSuccess",{defaultValue:"Role deleted successfully."})),(s=(l=x.current)==null?void 0:l.reload)==null||s.call(l)}catch(i){e.staticMethods.error(o("role.deleteError",{defaultValue:"Failed to delete role: {{error}}",error:i}))}},D=(t,l)=>{if(!l)return c.length===0?Promise.reject(new Error(o("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve();try{return JSON.parse(l),Promise.resolve()}catch{return Promise.reject(new Error(o("role.invalidJsonFormat",{defaultValue:"Invalid JSON format."})))}},q=async t=>{var l,s;try{t.policy_document=JSON.parse(t.policy_document??{}),y(!0),h?(await d.api.authorization.updateRole({id:h.id},{...t,permissions:c.filter(i=>!i.startsWith("[group]-"))}),e.staticMethods.success(o("role.updateSuccess",{defaultValue:"Role updated successfully."}))):(await d.api.authorization.createRole({...t,permissions:c.filter(i=>!i.startsWith("[group]-"))}),e.staticMethods.success(o("role.createSuccess",{defaultValue:"Role created successfully."}))),m(!1),(s=(l=x.current)==null?void 0:l.reload)==null||s.call(l)}catch(i){console.error(o("role.saveError",{defaultValue:"Failed to save role."}),i),e.staticMethods.error(o("role.saveError",{defaultValue:"Failed to save role."}))}finally{y(!1)}},N=[{title:o("role.name",{defaultValue:"Role Name"}),dataIndex:"name",key:"name",render:t=>e.jsxRuntimeExports.jsxs(e.Space,{children:[e.jsxRuntimeExports.jsx(e.RefIcon$14,{}),t]})},{title:o("role.description",{defaultValue:"Description"}),dataIndex:"description",key:"description"},{title:o("role.permissionCount",{defaultValue:"Permissions"}),key:"permission_count",render:(t,l)=>{var s;return e.jsxRuntimeExports.jsxs(e.Tag,{color:"blue",children:[e.jsxRuntimeExports.jsx(e.RefIcon$22,{})," ",((s=l.permissions)==null?void 0:s.length)||0]})}},{title:o("role.createdAt",{defaultValue:"Created At"}),dataIndex:"created_at",key:"created_at",render:t=>new Date(t).toLocaleString()},{title:a("actions",{defaultValue:"Actions"}),key:"action",render:(t,l)=>e.jsxRuntimeExports.jsxs(e.Space,{size:"small",children:[e.jsxRuntimeExports.jsx(f.PermissionGuard,{permission:"authorization:role:update",children:e.jsxRuntimeExports.jsx(e.Tooltip,{title:o("role.edit",{defaultValue:"Edit Role"}),children:e.jsxRuntimeExports.jsx(e.Button,{type:"text",size:"small",icon:e.jsxRuntimeExports.jsx(e.RefIcon$24,{}),onClick:()=>F(l)})})}),e.jsxRuntimeExports.jsx(f.PermissionGuard,{permission:"authorization:role:delete",children:e.jsxRuntimeExports.jsx(e.Tooltip,{title:o("role.delete",{defaultValue:"Delete Role"}),children:e.jsxRuntimeExports.jsx(e.Popconfirm,{title:o("role.deleteConfirm",{defaultValue:"Are you sure you want to delete this role?"}),onConfirm:()=>z(l.id),okText:a("confirm",{defaultValue:"Confirm"}),cancelText:a("cancel",{defaultValue:"Cancel"}),children:e.jsxRuntimeExports.jsx(e.Button,{type:"text",size:"small",danger:!0,icon:e.jsxRuntimeExports.jsx(e.RefIcon$25,{})})})})})]})}],M={allow_all:{policy:{Statement:[{Effect:"Allow",Action:["*"]}]}},deny_all:{Statement:[{Effect:"Deny",Action:["*"]}]},allow_with_action:{Statement:[{Effect:"Allow",Action:["authorization:user:view"]}]},allow_with_condition:{Statement:[{Effect:"Allow",Action:["authorization:user:update"],Condition:{StringEquals:{"id:":"abcdef"}}},{Effect:"Deny",Action:["*"]}]},allow_with_uri:{Statement:[{Effect:"Allow",Action:["authorization:user:view"],Condition:{StringEquals:{"http.uri":"/api/users/abcdef","http.method":"GET"}}},{Effect:"Deny",Action:["*"]}]}},A=async()=>{d.api.authorization.listPermissions().then(t=>{_(t.map((l,s)=>{var i;return{key:`[group]-${s}`,title:l.name,code:l.name.replace(/ /g,"_"),children:(i=l.permissions)==null?void 0:i.map(E=>({key:E.id,code:E.code.replace(/:/g,"."),title:E.name}))}}))})};return r.useEffect(()=>{A()},[]),e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsxs(e.Card,{style:{marginBottom:16},children:[e.jsxRuntimeExports.jsx("div",{style:{marginBottom:16},children:e.jsxRuntimeExports.jsxs(e.Row,{justify:"space-between",align:"middle",children:[e.jsxRuntimeExports.jsx(e.Col,{children:e.jsxRuntimeExports.jsx(e.Button,{type:"primary",onClick:()=>{var t,l;(l=(t=x.current)==null?void 0:t.reload)==null||l.call(t),A()},icon:e.jsxRuntimeExports.jsx(e.RefIcon$11,{}),children:a("refresh",{defaultValue:"Refresh"})})}),e.jsxRuntimeExports.jsx(e.Col,{children:e.jsxRuntimeExports.jsx(f.PermissionGuard,{permission:"authorization:role:create",children:e.jsxRuntimeExports.jsx(e.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(e.RefIcon$1,{}),onClick:T,children:o("role.create",{defaultValue:"Create Role"})})})})]})}),e.jsxRuntimeExports.jsx(f.Table,{request:async({page_size:t,current:l})=>d.api.authorization.listRoles({current:l,page_size:t}),columns:N,actionRef:x})]}),e.jsxRuntimeExports.jsx(e.Modal,{title:h?o("role.editTitle",{defaultValue:"Edit Role"}):o("role.createTitle",{defaultValue:"Create Role"}),open:S,onOk:u.submit,onCancel:()=>m(!1),confirmLoading:P,children:e.jsxRuntimeExports.jsxs(e.Form,{form:u,layout:"vertical",onFinish:q,children:[e.jsxRuntimeExports.jsx(e.Form.Item,{label:o("role.name",{defaultValue:"Role Name"}),name:"name",rules:[{required:!0,message:o("role.nameRequired",{defaultValue:"Please enter the role name."})}],children:e.jsxRuntimeExports.jsx(e.Input,{placeholder:o("role.namePlaceholder",{defaultValue:"Enter role name"})})}),e.jsxRuntimeExports.jsx(e.Form.Item,{label:o("role.description",{defaultValue:"Description"}),name:"description",children:e.jsxRuntimeExports.jsx(g,{rows:4,placeholder:o("role.descriptionPlaceholder",{defaultValue:"Enter role description"})})}),e.jsxRuntimeExports.jsxs(e.Collapse,{accordion:!0,bordered:!1,className:n.rolePolicy,children:[e.jsxRuntimeExports.jsx(e.Collapse.Panel,{forceRender:!0,header:o("role.permissions",{defaultValue:"Permissions"}),style:{padding:0},children:e.jsxRuntimeExports.jsx(e.Form.Item,{name:"permissions",rules:[{validator(){return c.length===0&&!u.getFieldValue("policy_document")?Promise.reject(new Error(o("role.permissionOrPolicyRequired",{defaultValue:"Please select at least one permission or provide a policy document."}))):Promise.resolve()}}],children:e.jsxRuntimeExports.jsx("div",{children:e.jsxRuntimeExports.jsxs("div",{style:{maxHeight:"400px",overflowY:"auto",border:"1px solid #d9d9d9",borderRadius:"4px"},children:[e.jsxRuntimeExports.jsxs("span",{className:n.rolePermissionExtra,children:[e.jsxRuntimeExports.jsx(e.Button,{type:"link",onClick:k,icon:e.jsxRuntimeExports.jsx(e.RefIcon$26,{}),children:a("expandAll",{defaultValue:"Expand All"})}),e.jsxRuntimeExports.jsx(e.Button,{type:"link",onClick:I,icon:e.jsxRuntimeExports.jsx(e.RefIcon$27,{}),children:a("collapseAll",{defaultValue:"Collapse All"})})]}),e.jsxRuntimeExports.jsx(e.Tree,{treeData:V,titleRender:t=>e.jsxRuntimeExports.jsx("span",{children:o(`permission.title.${t.code}`,{defaultValue:t.title})}),checkable:!0,expandedKeys:C,autoExpandParent:b,onExpand:v,checkedKeys:c,onCheck:t=>{e._.isArray(t)?p(t):e._.has(t,"checked")&&p(t.checked)}})]})})})},"permissions"),e.jsxRuntimeExports.jsx(e.Collapse.Panel,{forceRender:!0,header:o("role.policyDocument",{defaultValue:"Policy Document (JSON)"}),children:e.jsxRuntimeExports.jsx(e.Form.Item,{name:"policy_document",rules:[{validator:D}],extra:e.jsxRuntimeExports.jsx("span",{className:n.rolePolicyExtra,children:e.jsxRuntimeExports.jsx(e.Select,{style:{width:120},placeholder:o("role.insertTemplate",{defaultValue:"Insert Template"}),value:o("role.insertTemplate",{defaultValue:"Insert Template"}),options:[{label:o("role.allowAll",{defaultValue:"Allow All"}),value:"allow_all"},{label:o("role.denyAll",{defaultValue:"Deny All"}),value:"deny_all"},{label:o("role.allowWithAction",{defaultValue:"Allow with Action"}),value:"allow_with_action"},{label:o("role.denyWithCondition",{defaultValue:"Allow with Condition"}),value:"allow_with_condition"},{label:o("role.allowWithUri",{defaultValue:"Allow with URI"}),value:"allow_with_uri"}],onChange:t=>{const l=M[t];l&&u.setFieldValue("policy_document",JSON.stringify(l,null,2))}})}),children:e.jsxRuntimeExports.jsx(g,{rows:15,style:{fontFamily:"monospace"},placeholder:`{
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "account:EnableRegion",
                "account:DisableRegion"
            ],
            "Condition": {
                "StringEquals": {"id:": "abcdef"}
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "*"
            ]
        }
    ]
}`})})},"policy_document")]})]})})]})};exports.default=$;

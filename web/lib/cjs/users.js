"use strict";const e=require("./vendor.js"),h=require("react"),b=require("react-router-dom"),y=require("./components.js"),f=require("./index.js"),V=require("./base.js"),A=require("./client.js"),D=require("./contexts.js"),{Option:U}=e.Select,z=({user:u,onClose:s,onSuccess:t})=>{const{t:c}=e.useTranslation("authorization"),[m,n]=h.useState(null),[o,E]=h.useState(null),{run:g,loading:j}=e.useRequest(f.api.authorization.updateUser,{onSuccess:()=>{e.staticMethods.success(c("user.updateUserSuccess",{defaultValue:"User updated successfully"})),t()},onError:d=>{e.staticMethods.error(c("user.updateUserError",{defaultValue:"Failed to update user",error:d.message}))},manual:!0}),{data:x,loading:p}=e.useRequest(async()=>m==="bind"?f.api.authorization.getLdapUsers({skip_existing:!0}).then(d=>{const l=[],i=[];for(const R of d)R.username===(u==null?void 0:u.username)||R.email===(u==null?void 0:u.email)||R.full_name===(u==null?void 0:u.full_name)?l.push({recommend:!0,...R}):i.push({recommend:!1,...R});return[...l,...i]}):Promise.resolve([]),{refreshDeps:[u==null?void 0:u.id,m]});return h.useEffect(()=>{u&&(n(null),E(null))},[u]),e.jsxRuntimeExports.jsx(e.Modal,{open:u!==null,onCancel:s,onOk:()=>{if(u){if(m==="local")return g({id:u.id},{source:"local"});if(m==="bind"){if(!o){e.staticMethods.error(c("user.ldapUserDNRequired",{defaultValue:"LDAP User DN is required"}));return}return g({id:u.id},{source:"ldap",ldap_dn:o})}else{e.staticMethods.error(c("user.unknownFixMethod",{defaultValue:"Unknown fix method"}));return}}e.staticMethods.error(c("user.unknownUserId",{defaultValue:"Unknown user id"}))},title:c("user.fixUserTitle",{defaultValue:"Fix User"}),children:e.jsxRuntimeExports.jsxs(e.Space,{direction:"vertical",style:{width:"100%"},children:[e.jsxRuntimeExports.jsx(e.Button,{loading:j,style:{width:"100%",height:40},type:"default",variant:"outlined",color:m==="local"?"primary":"default",onClick:()=>n("local"),children:c("user.fixUserConvertToLocal",{defaultValue:"Convert to Local"})}),e.jsxRuntimeExports.jsx(e.Button,{loading:j,style:{width:"100%",height:40},type:"default",variant:"outlined",color:m==="bind"?"primary":"default",onClick:()=>n("bind"),children:c("user.fixUserBindLDAPUser",{defaultValue:"Bind LDAP User"})}),e.jsxRuntimeExports.jsx(e.Select,{loading:p,style:{display:m==="bind"?"block":"none"},onSelect:d=>E(d),options:x==null?void 0:x.map(d=>({label:e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsx(e.Tag,{color:d.recommend?"blue":"default",children:d.full_name})," ",d.username," - ",d.email," - ",d.ldap_dn]}),value:d.ldap_dn})),showSearch:!0})]})})},L=()=>{const u=b.useNavigate(),{t:s}=e.useTranslation("authorization"),{t}=e.useTranslation("common"),[c]=e.Form.useForm(),[m,n]=h.useState([]),[o,E]=h.useState(0),[g,j]=h.useState(null),[x,p]=h.useState({current:V.PAGINATION.DEFAULT_CURRENT,page_size:V.PAGINATION.DEFAULT_PAGE_SIZE,keywords:void 0,status:void 0}),{run:d,loading:l}=e.useRequest(()=>{const r={status:x.status,keywords:x.keywords};return f.api.authorization.listUsers({current:x.current,page_size:x.page_size,...r})},{onSuccess:r=>{n(r.data||[]),E(r.total||0)},onError:r=>{e.staticMethods.error(s("user.loadError",{defaultValue:"Failed to load users",error:r.message}))},refreshDeps:[x]}),i=r=>{p({...x,current:V.PAGINATION.DEFAULT_CURRENT,keywords:r.keywords,status:r.status})},R=()=>{c.resetFields(),p({current:V.PAGINATION.DEFAULT_CURRENT,page_size:V.PAGINATION.DEFAULT_PAGE_SIZE,keywords:void 0,status:void 0})},I=(r,a)=>{p(_=>({..._,current:r,page_size:a}))},{run:v}=e.useRequest(f.api.authorization.restoreUser,{onSuccess:()=>{e.staticMethods.success(s("user.restoreSuccess",{defaultValue:"User restored successfully"})),d()},onError:r=>{e.staticMethods.error(s("user.restoreError",{defaultValue:"Failed to restore user",error:r.message}))},manual:!0}),{run:S}=e.useRequest(f.api.authorization.deleteUser,{onSuccess:()=>{e.staticMethods.success(s("user.deleteSuccess",{defaultValue:"User deleted successfully"})),d()},onError:r=>{e.staticMethods.error(s("user.deleteError",{defaultValue:"Failed to delete user",error:r.message}))},manual:!0}),C=(r,a,_)=>{e.Modal.confirm({title:s("user.resetPasswordTitle",{defaultValue:"Reset Password"}),content:s("user.resetPasswordConfirm",{defaultValue:`Are you sure you want to reset the password for ${a}?`,username:a}),okText:t("confirm",{defaultValue:"Confirm"}),cancelText:t("cancel",{defaultValue:"Cancel"}),onOk:async()=>{try{const w=await f.api.authorization.resetUserPassword({id:r},{password:""});e.staticMethods.success(s("user.resetPasswordSuccess",{defaultValue:"Password reset successfully"})),w.new_password?e.Modal.info({title:s("user.resetPasswordSuccess",{defaultValue:"Password Reset Successfully"}),content:e.jsxRuntimeExports.jsx(e.Typography.Text,{copyable:{text:w.new_password},children:s("user.resetPasswordSuccessContent",{defaultValue:`New password: ${w.new_password}`,password:w.new_password})})}):e.Modal.info({title:s("user.resetPasswordSuccess",{defaultValue:"Password Reset Successfully"}),content:s("user.resetPasswordSuccessSendByEmail",{defaultValue:"The new password has been sent to the user email: {{email}}",email:_})})}catch(w){console.error("Reset password error:",w),e.staticMethods.error(s("user.resetPasswordError",{defaultValue:"Failed to reset password"}))}}})},T=r=>{e.Modal.confirm({title:s("user.unlockTitle",{defaultValue:"Unlock User"}),content:s("user.unlockConfirm",{defaultValue:"Are you sure you want to unlock this user?"}),onOk:async()=>{try{await f.api.authorization.unlockUser({id:r}),e.staticMethods.success(s("user.unlockSuccess",{defaultValue:"User unlocked successfully"})),d()}catch(a){e.staticMethods.error(s("user.unlockError",{defaultValue:"Failed to unlock user: {{error}}",error:a.message??String(a)}))}}})},F=[{title:s("user.username",{defaultValue:"Username"}),key:"user",render:(r,a)=>e.jsxRuntimeExports.jsxs("div",{style:{display:"flex",alignItems:"center"},children:[e.jsxRuntimeExports.jsx(y.Avatar,{size:"small",icon:e.jsxRuntimeExports.jsx(e.RefIcon$14,{}),src:a.avatar,style:{marginRight:8}}),e.jsxRuntimeExports.jsx(b.Link,{to:`/authorization/users/${a.id}`,children:a.username})]})},{title:s("user.fullName",{defaultValue:"Full Name"}),dataIndex:"full_name",key:"full_name"},{title:s("user.email",{defaultValue:"Email"}),dataIndex:"email",key:"email"},{title:s("user.source",{defaultValue:"Source"}),dataIndex:"source",key:"source",render:(r,a)=>{switch(r){case"ldap":return a.ldap_dn?e.jsxRuntimeExports.jsx(e.Tag,{color:"blue",children:s("user.sourceLdap",{defaultValue:"LDAP"})}):e.jsxRuntimeExports.jsx(e.Tooltip,{title:s("user.ldapUserNotBound",{defaultValue:"LDAP User is not bound to any local user, please bind it."}),children:e.jsxRuntimeExports.jsx(e.Tag,{color:"red",children:s("user.sourceLdap",{defaultValue:"LDAP"})})});case"oauth2":return e.jsxRuntimeExports.jsx(e.Tag,{color:"green",children:s("user.sourceOauth2",{defaultValue:"OAuth2"})});default:return e.jsxRuntimeExports.jsx(e.Tag,{color:"default",children:s("user.sourceLocal",{defaultValue:"Local"})})}}},{title:s("user.status",{defaultValue:"Status"}),dataIndex:"status",key:"status",render:r=>{switch(r){case"disabled":return e.jsxRuntimeExports.jsx(e.Badge,{status:"default",text:s("user.statusEnum.disabled",{defaultValue:"Disabled"})});case"password_expired":return e.jsxRuntimeExports.jsx(e.Badge,{status:"warning",text:s("user.statusEnum.password_expired",{defaultValue:"Password Expired"})});case"active":return e.jsxRuntimeExports.jsx(e.Badge,{status:"success",text:s("user.statusEnum.active",{defaultValue:"Active"})});case"locked":return e.jsxRuntimeExports.jsx(e.Badge,{status:"warning",text:s("user.statusEnum.locked",{defaultValue:"Locked"})});case"deleted":return e.jsxRuntimeExports.jsx(e.Badge,{status:"error",text:s("user.statusEnum.deleted",{defaultValue:"Deleted"})});default:return e.jsxRuntimeExports.jsx(e.Badge,{status:"default",text:s(`user.statusEnum.${r}`,{defaultValue:r.charAt(0).toUpperCase()+r.slice(1)})})}}},{title:s("user.roles",{defaultValue:"Roles"}),dataIndex:"roles",key:"roles",render:r=>e.jsxRuntimeExports.jsx("span",{children:r&&r.length>0?r.map(a=>e.jsxRuntimeExports.jsx(e.Tag,{color:"blue",children:a.name},a.id)):e.jsxRuntimeExports.jsx(e.Tag,{children:s("user.noRole",{defaultValue:"No Role"})})})},{title:s("user.mfa",{defaultValue:"MFA"}),dataIndex:"mfa_enabled",key:"mfa_enabled",render:r=>r?e.jsxRuntimeExports.jsx(e.Badge,{status:"success",text:s("user.mfaEnabled",{defaultValue:"Enabled"})}):e.jsxRuntimeExports.jsx(e.Badge,{status:"default",text:s("user.mfaDisabled",{defaultValue:"Disabled"})})},{title:s("user.lastLogin",{defaultValue:"Last Login"}),dataIndex:"last_login",key:"last_login",render:r=>r?V.formatDate(r):s("user.neverLogin",{defaultValue:"Never"})},{title:t("actions",{defaultValue:"Actions"}),key:"action",render:(r,a)=>{const _=[{key:"view",permission:"authorization:user:view",icon:e.jsxRuntimeExports.jsx(e.RefIcon$4,{}),tooltip:s("user.viewDetail",{defaultValue:"View Detail"}),onClick:()=>u(`/authorization/users/${a.id}`)},{key:"edit",permission:"authorization:user:update",icon:e.jsxRuntimeExports.jsx(e.RefIcon$24,{}),tooltip:s("user.edit",{defaultValue:"Edit"}),hidden:a.status==="locked"||a.status==="deleted",onClick:()=>u(`/authorization/users/${a.id}/edit`)},{key:"unlock",permission:"authorization:user:update",icon:e.jsxRuntimeExports.jsx(e.RefIcon$38,{}),tooltip:s("user.unlock",{defaultValue:"Unlock"}),hidden:a.status!=="locked",onClick:()=>T(a.id)},{key:"resetPassword",permission:"authorization:user:resetPassword",icon:e.jsxRuntimeExports.jsx(e.RefIcon$21,{}),disabled:a.disable_change_password,tooltip:a.disable_change_password?s("user.resetPasswordDisabled",{defaultValue:"The current system prohibits modifying the password of this user."}):s("user.resetPassword",{defaultValue:"Reset Password"}),hidden:!((a.source==="local"||a.source==="ldap"&&a.ldap_dn)&&a.status!=="deleted"),onClick:()=>C(a.id,a.username,a.email)},{key:"fixUser",permission:"authorization:user:update",icon:e.jsxRuntimeExports.jsx(e.RefIcon$39,{}),tooltip:s("user.fixUser",{defaultValue:"Fix User"}),hidden:!(a.source==="ldap"&&!a.ldap_dn&&a.status!=="deleted"),onClick:()=>j(a)},{key:"restore",permission:"authorization:user:update",icon:e.jsxRuntimeExports.jsx(e.RefIcon$40,{}),tooltip:s("user.restore",{defaultValue:"Restore"}),hidden:a.status!=="deleted",confirm:{title:s("user.restoreConfirm",{defaultValue:"Are you sure you want to restore this user?"}),onConfirm:()=>v({id:a.id})}},{key:"delete",permission:"authorization:user:delete",icon:e.jsxRuntimeExports.jsx(e.RefIcon$25,{}),tooltip:s("user.delete",{defaultValue:"Delete"}),danger:!0,confirm:{title:s("user.deleteConfirm",{defaultValue:"Are you sure you want to delete this user?"}),onConfirm:()=>S({id:a.id}),okText:t("confirm",{defaultValue:"Confirm"}),cancelText:t("cancel",{defaultValue:"Cancel"})}}];return e.jsxRuntimeExports.jsx(y.Actions,{actions:_},"actions")}}];return e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsx(e.Card,{style:{marginBottom:16},children:e.jsxRuntimeExports.jsx(e.Form,{form:c,layout:"inline",onFinish:i,style:{marginBottom:16},children:e.jsxRuntimeExports.jsxs(e.Row,{gutter:16,style:{width:"100%"},children:[e.jsxRuntimeExports.jsx(e.Col,{span:6,children:e.jsxRuntimeExports.jsx(e.Form.Item,{name:"keywords",children:e.jsxRuntimeExports.jsx(e.Input,{prefix:e.jsxRuntimeExports.jsx(e.RefIcon$10,{}),placeholder:s("user.keywords",{defaultValue:"Search by username, full name, or email"}),allowClear:!0})})}),e.jsxRuntimeExports.jsx(e.Col,{span:6,children:e.jsxRuntimeExports.jsx(e.Form.Item,{name:"status",children:e.jsxRuntimeExports.jsxs(e.Select,{placeholder:s("user.status",{defaultValue:"Status"}),allowClear:!0,style:{width:"100%"},children:[e.jsxRuntimeExports.jsx(U,{value:"active",children:s("user.statusEnum.active",{defaultValue:"Active"})}),e.jsxRuntimeExports.jsx(U,{value:"disabled",children:s("user.statusEnum.disabled",{defaultValue:"Disabled"})}),e.jsxRuntimeExports.jsx(U,{value:"deleted",children:s("user.statusEnum.deleted",{defaultValue:"Deleted"})}),e.jsxRuntimeExports.jsx(U,{value:"locked",children:s("user.statusEnum.locked",{defaultValue:"Locked"})}),e.jsxRuntimeExports.jsx(U,{value:"password_expired",children:s("user.statusEnum.password_expired",{defaultValue:"Password Expired"})})]})})}),e.jsxRuntimeExports.jsx(e.Col,{span:6,children:e.jsxRuntimeExports.jsxs(e.Space,{children:[e.jsxRuntimeExports.jsx(e.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(e.RefIcon$10,{}),htmlType:"submit",children:t("search",{defaultValue:"Search"})}),e.jsxRuntimeExports.jsx(e.Button,{icon:e.jsxRuntimeExports.jsx(e.RefIcon$11,{}),onClick:R,children:t("reset",{defaultValue:"Reset"})})]})})]})})}),e.jsxRuntimeExports.jsxs(e.Card,{children:[e.jsxRuntimeExports.jsxs(e.Row,{justify:"space-between",align:"middle",gutter:[0,16],children:[e.jsxRuntimeExports.jsx(e.Col,{children:e.jsxRuntimeExports.jsx(e.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(e.RefIcon$11,{}),onClick:d,children:t("refresh",{defaultValue:"Refresh"})})}),e.jsxRuntimeExports.jsx(e.Col,{children:e.jsxRuntimeExports.jsx(y.PermissionGuard,{permission:"authorization:user:create",children:e.jsxRuntimeExports.jsx(e.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(e.RefIcon$41,{}),style:{marginBottom:16},onClick:()=>u("/authorization/users/create"),children:s("user.create",{defaultValue:"Create User"})})})})]}),e.jsxRuntimeExports.jsx(e.ForwardTable,{columns:F,dataSource:m,rowKey:"id",loading:l,pagination:{current:x.current,pageSize:x.page_size,total:o,showSizeChanger:!0,showQuickJumper:!0,showTotal:r=>t("totalItems",{defaultValue:`Total ${r} items`,total:r}),onChange:I}})]}),e.jsxRuntimeExports.jsx(z,{user:g,onClose:()=>j(null),onSuccess:()=>{j(null),d()}})]})},M=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"})),{Title:q}=e.Typography,{TabPane:k}=e.Tabs,B=()=>{const{id:u}=b.useParams(),s=b.useNavigate(),{t}=e.useTranslation("authorization"),{t:c}=e.useTranslation("common"),[m,n]=h.useState(!1),[o,E]=h.useState(null),{hasPermission:g}=D.usePermission();if(h.useEffect(()=>{(async()=>{if(u){n(!0);try{const p=await f.api.authorization.getUser({id:u});E(p)}catch(p){p instanceof A.ApiError&&p.code==="E4041"||(console.error("Failed to get user details:",p),e.staticMethods.error(t("user.detailLoadError",{defaultValue:"Failed to load user details"})))}finally{n(!1)}}})()},[u,t]),m)return e.jsxRuntimeExports.jsx("div",{style:{textAlign:"center",padding:"50px"},children:e.jsxRuntimeExports.jsx(e.Spin,{size:"large"})});if(!o)return e.jsxRuntimeExports.jsxs("div",{style:{textAlign:"center",padding:"50px"},children:[e.jsxRuntimeExports.jsx(q,{level:4,children:t("user.notFound",{defaultValue:"User not found"})}),e.jsxRuntimeExports.jsx(e.Button,{type:"primary",onClick:()=>s("/authorization/users"),children:t("user.backToList",{defaultValue:"Back to User List"})})]});const j=()=>o.mfa_enabled?e.jsxRuntimeExports.jsx(e.Badge,{status:"success",text:t("user.mfaEnabled",{defaultValue:"Enabled"})}):o.mfa_enforced?e.jsxRuntimeExports.jsx(e.Badge,{status:"warning",text:t("user.mfaEnforced",{defaultValue:"Enforced"})}):e.jsxRuntimeExports.jsx(e.Badge,{status:"default",text:t("user.mfaDisabled",{defaultValue:"Disabled"})});return e.jsxRuntimeExports.jsx(e.Card,{title:e.jsxRuntimeExports.jsxs("div",{style:{display:"flex",alignItems:"center"},children:[e.jsxRuntimeExports.jsx(y.Avatar,{size:64,icon:e.jsxRuntimeExports.jsx(e.RefIcon$14,{}),src:o.avatar,style:{marginRight:16}}),e.jsxRuntimeExports.jsxs("div",{children:[e.jsxRuntimeExports.jsx("div",{style:{fontSize:20,fontWeight:"bold"},children:o.username}),e.jsxRuntimeExports.jsx("div",{style:{color:"#888"},children:o.email})]})]}),extra:e.jsxRuntimeExports.jsxs(e.Space,{children:[e.jsxRuntimeExports.jsx(e.Button,{icon:e.jsxRuntimeExports.jsx(e.RefIcon$42,{}),onClick:()=>s("/authorization/users"),children:c("back",{defaultValue:"Back"})}),e.jsxRuntimeExports.jsx(e.Button,{type:"primary",icon:e.jsxRuntimeExports.jsx(e.RefIcon$24,{}),onClick:()=>s(`/authorization/users/${u}/edit`),children:c("edit",{defaultValue:"Edit"})})]}),children:e.jsxRuntimeExports.jsxs(e.Tabs,{defaultActiveKey:"basic",children:[e.jsxRuntimeExports.jsx(k,{tab:t("user.basicInfo",{defaultValue:"Basic Information"}),children:e.jsxRuntimeExports.jsxs(e.Descriptions,{bordered:!0,column:2,style:{marginTop:16},children:[e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.username",{defaultValue:"Username"}),children:o.username}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.fullName",{defaultValue:"Full Name"}),children:o.full_name}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.email",{defaultValue:"Email"}),children:o.email}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.status",{defaultValue:"Status"}),children:o.status==="active"?e.jsxRuntimeExports.jsx(e.Badge,{status:"success",text:t("user.statusActive",{defaultValue:"Active"})}):e.jsxRuntimeExports.jsx(e.Badge,{status:"error",text:t(`user.statusEnum.${o.status}`,{defaultValue:o.status.charAt(0).toUpperCase()+o.status.slice(1)})})}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.roles",{defaultValue:"Roles"}),span:2,children:o.roles&&o.roles.length>0?o.roles.map(x=>e.jsxRuntimeExports.jsx(e.Tag,{color:"blue",children:x.name},x.id)):e.jsxRuntimeExports.jsx(e.Tag,{children:t("user.noRole",{defaultValue:"No Role"})})}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.mfa",{defaultValue:"MFA"}),children:j()}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.lastLogin",{defaultValue:"Last Login"}),children:o.last_login?V.formatDate(o.last_login):t("user.neverLogin",{defaultValue:"Never"})}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.createdAt",{defaultValue:"Created At"}),children:V.formatDate(o.created_at)}),e.jsxRuntimeExports.jsx(e.Descriptions.Item,{label:t("user.updatedAt",{defaultValue:"Updated At"}),children:V.formatDate(o.updated_at)})]})},"basic"),e.jsxRuntimeExports.jsx(k,{disabled:!g("authorization:user:view_audit_logs"),tab:t("user.auditLogs",{defaultValue:"Audit Logs"}),children:e.jsxRuntimeExports.jsx(y.UserAuditLogs,{userId:u||""})},"logs")]})})},N=Object.freeze(Object.defineProperty({__proto__:null,default:B},Symbol.toStringTag,{value:"Module"})),{Option:P}=e.Select,$=()=>{const{id:u=""}=b.useParams(),s=b.useNavigate(),{t}=e.useTranslation("authorization"),{t:c}=e.useTranslation("common"),[m]=e.Form.useForm(),n=!!u,{data:o,loading:E}=e.useRequest(async()=>(await f.api.authorization.listRoles({})).data.map(i=>({...i,label:i.name,value:i.id}))),{loading:g}=e.useRequest(async()=>{if(!(!n||!m))try{const l=await f.api.authorization.getUser({id:u});return m.setFieldsValue({username:l.username,email:l.email,full_name:l.full_name,status:l.status,role_ids:l.roles?l.roles.map(i=>i.id):[],mfa_enforced:l.mfa_enforced}),l}catch{e.staticMethods.error(t("user.loadError",{defaultValue:"Failed to load user data"}))}},{refreshDeps:[u,m]}),{run:j,loading:x}=e.useRequest(async l=>{try{if(n)await f.api.authorization.updateUser({id:u},{email:l.email,avatar:l.avatar,full_name:l.full_name,status:l.status,mfa_enforced:l.mfa_enforced,role_ids:l.role_ids}),e.staticMethods.success(t("user.updateSuccess",{defaultValue:"User updated successfully"})),s(`/authorization/users/${u}`);else{const i={username:l.username,avatar:l.avatar,password:l.password,email:l.email,full_name:l.full_name,mfa_enforced:l.mfa_enforced,role_ids:l.role_ids},R=await f.api.authorization.createUser(i);e.staticMethods.success(t("user.createSuccess",{defaultValue:"User created successfully"})),s(`/authorization/users/${R.id}`)}}catch(i){e.staticMethods.error(n?t("user.updateError",{defaultValue:"Failed to update user",error:i}):t("user.createError",{defaultValue:"Failed to create user",error:i}))}},{manual:!0}),p=(l,i)=>n?Promise.resolve():i?i.length<8?Promise.reject(new Error(t("user.passwordTooShort",{defaultValue:"Password must be at least 8 characters long"}))):Promise.resolve():Promise.reject(new Error(t("user.passwordRequired",{defaultValue:"Password is required"}))),d=(l,i)=>n?Promise.resolve():i?i!==m.getFieldValue("password")?Promise.reject(new Error(t("user.passwordMismatch",{defaultValue:"Passwords do not match"}))):Promise.resolve():Promise.reject(new Error(t("user.confirmPasswordRequired",{defaultValue:"Please confirm your password"})));return e.jsxRuntimeExports.jsx(e.Card,{title:n?t("user.editTitle",{defaultValue:"Edit User"}):t("user.createTitle",{defaultValue:"Create User"}),loading:g||E,children:e.jsxRuntimeExports.jsxs(e.Form,{form:m,layout:"horizontal",onFinish:j,labelCol:{sm:{span:24},md:{span:6}},wrapperCol:{sm:{span:24},md:{span:18}},size:"middle",style:{maxWidth:"500px",margin:"0 auto"},initialValues:{status:"active",role_ids:[]},children:[e.jsxRuntimeExports.jsx(e.Form.Item,{name:"avatar",label:t("user.avatar",{defaultValue:"Avatar"}),children:e.jsxRuntimeExports.jsx(y.AvatarUpload,{})}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"username",label:t("user.username",{defaultValue:"Username"}),rules:[{required:!n,message:t("user.usernameRequired",{defaultValue:"Username is required"})}],children:e.jsxRuntimeExports.jsx(e.Input,{disabled:n,placeholder:t("user.usernamePlaceholder",{defaultValue:"Enter username"})})}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"email",label:t("user.email",{defaultValue:"Email"}),rules:[{required:!0,message:t("user.emailRequired",{defaultValue:"Email is required"})},{type:"email",message:t("user.emailInvalid",{defaultValue:"Invalid email format"})}],children:e.jsxRuntimeExports.jsx(e.Input,{placeholder:t("user.emailPlaceholder",{defaultValue:"Enter email address"})})}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"full_name",label:t("user.fullName",{defaultValue:"Full Name"}),rules:[{required:!0,message:t("user.fullNameRequired",{defaultValue:"Full name is required"})}],children:e.jsxRuntimeExports.jsx(e.Input,{placeholder:t("user.fullNamePlaceholder",{defaultValue:"Enter full name"})})}),n&&e.jsxRuntimeExports.jsx(e.Form.Item,{name:"status",label:t("user.status",{defaultValue:"Status"}),rules:[{required:!0,message:t("user.statusRequired",{defaultValue:"Status is required"})}],children:e.jsxRuntimeExports.jsxs(e.Select,{placeholder:t("user.statusPlaceholder",{defaultValue:"Select status"}),children:[e.jsxRuntimeExports.jsx(P,{value:"active",children:t("user.statusActive",{defaultValue:"Active"})}),e.jsxRuntimeExports.jsx(P,{value:"disabled",children:t("user.statusDisabled",{defaultValue:"Disabled"})})]})}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"mfa_enforced",label:t("user.mfaEnforced",{defaultValue:"MFA Enforced"}),children:e.jsxRuntimeExports.jsx(e.Switch,{})}),!n&&e.jsxRuntimeExports.jsxs(e.jsxRuntimeExports.Fragment,{children:[e.jsxRuntimeExports.jsx(e.Form.Item,{name:"password",label:t("user.password",{defaultValue:"Password"}),rules:[{validator:p}],children:e.jsxRuntimeExports.jsx(e.Input.Password,{visibilityToggle:!1,placeholder:t("user.passwordPlaceholder",{defaultValue:"Enter password"})})}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"confirm_password",label:t("user.confirmPassword",{defaultValue:"Confirm Password"}),rules:[{validator:d}],dependencies:["password"],children:e.jsxRuntimeExports.jsx(e.Input.Password,{placeholder:t("user.confirmPasswordPlaceholder",{defaultValue:"Confirm password"})})})]}),e.jsxRuntimeExports.jsx(e.Form.Item,{name:"role_ids",label:t("user.roles",{defaultValue:"Roles"}),children:e.jsxRuntimeExports.jsx(e.Select,{mode:"multiple",placeholder:t("user.selectRoles",{defaultValue:"Select roles"}),options:o,optionFilterProp:"label",loading:E})}),e.jsxRuntimeExports.jsx(e.Form.Item,{wrapperCol:{offset:9},children:e.jsxRuntimeExports.jsxs(e.Space,{children:[e.jsxRuntimeExports.jsx(e.Button,{type:"primary",htmlType:"submit",loading:x,children:n?c("update",{defaultValue:"Update"}):c("create",{defaultValue:"Create"})}),e.jsxRuntimeExports.jsx(e.Button,{onClick:()=>s(n?`/authorization/users/${u}`:"/authorization/users"),children:c("cancel",{defaultValue:"Cancel"})})]})})]})})},O=Object.freeze(Object.defineProperty({__proto__:null,default:$},Symbol.toStringTag,{value:"Module"}));exports.UserDetail=N;exports.UserForm=O;exports.UserList=M;
